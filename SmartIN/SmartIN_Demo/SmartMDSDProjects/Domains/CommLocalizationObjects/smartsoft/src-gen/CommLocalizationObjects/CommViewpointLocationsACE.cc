//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommLocalizationObjects/CommViewpointLocationsACE.hh"
#include <ace/SString.h>
#include "CommLocalizationObjects/ViewpointLocationACE.hh"

// serialization operator for element CommViewpointLocations
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjectsIDL::CommViewpointLocations &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element database
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.database.size());
	std::vector<CommLocalizationObjectsIDL::ViewpointLocation>::const_iterator data_databaseIt;
	for(data_databaseIt=data.database.begin(); data_databaseIt!=data.database.end(); data_databaseIt++) {
		good_bit = good_bit && cdr << *data_databaseIt;
	}
	
	return good_bit;
}

// de-serialization operator for element CommViewpointLocations
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjectsIDL::CommViewpointLocations &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element database
	ACE_CDR::ULong data_databaseNbr;
	good_bit = good_bit && cdr >> data_databaseNbr;
	data.database.clear();
	CommLocalizationObjectsIDL::ViewpointLocation data_databaseItem;
	for(ACE_CDR::ULong i=0; i<data_databaseNbr; ++i) {
		good_bit = good_bit && cdr >> data_databaseItem;
		data.database.push_back(data_databaseItem);
	}
	
	return good_bit;
}

// serialization operator for CommunicationObject CommViewpointLocations
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjects::CommViewpointLocations &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommViewpointLocations
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjects::CommViewpointLocations &obj)
{
	return cdr >> obj.set();
}
