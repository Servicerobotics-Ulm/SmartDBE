//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommLocalizationObjects/CommBeaconLocalizationRawDataACE.hh"
#include <ace/SString.h>
#include "CommLocalizationObjects/CommBeaconMeasurementACE.hh"

// serialization operator for element CommBeaconLocalizationRawData
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjectsIDL::CommBeaconLocalizationRawData &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element measurements
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.measurements.size());
	std::vector<CommLocalizationObjectsIDL::CommBeaconMeasurement>::const_iterator data_measurementsIt;
	for(data_measurementsIt=data.measurements.begin(); data_measurementsIt!=data.measurements.end(); data_measurementsIt++) {
		good_bit = good_bit && cdr << *data_measurementsIt;
	}
	
	return good_bit;
}

// de-serialization operator for element CommBeaconLocalizationRawData
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjectsIDL::CommBeaconLocalizationRawData &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element measurements
	ACE_CDR::ULong data_measurementsNbr;
	good_bit = good_bit && cdr >> data_measurementsNbr;
	data.measurements.clear();
	CommLocalizationObjectsIDL::CommBeaconMeasurement data_measurementsItem;
	for(ACE_CDR::ULong i=0; i<data_measurementsNbr; ++i) {
		good_bit = good_bit && cdr >> data_measurementsItem;
		data.measurements.push_back(data_measurementsItem);
	}
	
	return good_bit;
}

// serialization operator for CommunicationObject CommBeaconLocalizationRawData
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjects::CommBeaconLocalizationRawData &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommBeaconLocalizationRawData
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjects::CommBeaconLocalizationRawData &obj)
{
	return cdr >> obj.set();
}
