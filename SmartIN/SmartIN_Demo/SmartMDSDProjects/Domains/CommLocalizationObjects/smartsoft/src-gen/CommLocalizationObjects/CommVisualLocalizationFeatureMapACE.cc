//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommLocalizationObjects/CommVisualLocalizationFeatureMapACE.hh"
#include <ace/SString.h>
#include "CommLocalizationObjects/CommVisualLocalizationFeatureACE.hh"

// serialization operator for element CommVisualLocalizationFeatureMap
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjectsIDL::CommVisualLocalizationFeatureMap &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element features
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.features.size());
	std::vector<CommLocalizationObjectsIDL::CommVisualLocalizationFeature>::const_iterator data_featuresIt;
	for(data_featuresIt=data.features.begin(); data_featuresIt!=data.features.end(); data_featuresIt++) {
		good_bit = good_bit && cdr << *data_featuresIt;
	}
	// serialize list-element isValid
	good_bit = good_bit && cdr.write_boolean(data.isValid);
	
	return good_bit;
}

// de-serialization operator for element CommVisualLocalizationFeatureMap
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjectsIDL::CommVisualLocalizationFeatureMap &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element features
	ACE_CDR::ULong data_featuresNbr;
	good_bit = good_bit && cdr >> data_featuresNbr;
	data.features.clear();
	CommLocalizationObjectsIDL::CommVisualLocalizationFeature data_featuresItem;
	for(ACE_CDR::ULong i=0; i<data_featuresNbr; ++i) {
		good_bit = good_bit && cdr >> data_featuresItem;
		data.features.push_back(data_featuresItem);
	}
	// deserialize type element isValid
	good_bit = good_bit && cdr.read_boolean(data.isValid);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommVisualLocalizationFeatureMap
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommLocalizationObjects::CommVisualLocalizationFeatureMap &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommVisualLocalizationFeatureMap
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommLocalizationObjects::CommVisualLocalizationFeatureMap &obj)
{
	return cdr >> obj.set();
}
