//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMLOCALIZATIONOBJECTS_CMATRIXDOUBLE22_CORE_H_
#define COMMLOCALIZATIONOBJECTS_CMATRIXDOUBLE22_CORE_H_

#include "CommLocalizationObjects/CMatrixDouble22Data.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommLocalizationObjects {
	
class CMatrixDouble22Core {
protected:
	// data structure
	CommLocalizationObjectsIDL::CMatrixDouble22 idl_CMatrixDouble22;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommLocalizationObjectsIDL::CMatrixDouble22 DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CMatrixDouble22Core();
	CMatrixDouble22Core(const DATATYPE &data);
	// default destructor
	virtual ~CMatrixDouble22Core();
	
	const DATATYPE& get() const { return idl_CMatrixDouble22; }
	operator const DATATYPE&() const { return idl_CMatrixDouble22; }
	DATATYPE& set() { return idl_CMatrixDouble22; }

	static inline std::string identifier(void) { return "CommLocalizationObjects::CMatrixDouble22"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element M_00
	inline double getM_00() const { return idl_CMatrixDouble22.m_00; }
	inline CMatrixDouble22Core& setM_00(const double &m_00) { idl_CMatrixDouble22.m_00 = m_00; return *this; }
	
	// getter and setter for element M_01
	inline double getM_01() const { return idl_CMatrixDouble22.m_01; }
	inline CMatrixDouble22Core& setM_01(const double &m_01) { idl_CMatrixDouble22.m_01 = m_01; return *this; }
	
	// getter and setter for element M_10
	inline double getM_10() const { return idl_CMatrixDouble22.m_10; }
	inline CMatrixDouble22Core& setM_10(const double &m_10) { idl_CMatrixDouble22.m_10 = m_10; return *this; }
	
	// getter and setter for element M_11
	inline double getM_11() const { return idl_CMatrixDouble22.m_11; }
	inline CMatrixDouble22Core& setM_11(const double &m_11) { idl_CMatrixDouble22.m_11 = m_11; return *this; }
};

} /* namespace CommLocalizationObjects */
#endif /* COMMLOCALIZATIONOBJECTS_CMATRIXDOUBLE22_CORE_H_ */
