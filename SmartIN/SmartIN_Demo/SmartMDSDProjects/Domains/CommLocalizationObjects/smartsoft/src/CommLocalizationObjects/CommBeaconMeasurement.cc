//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommLocalizationObjects/CommBeaconMeasurement.hh"

using namespace CommLocalizationObjects;

CommBeaconMeasurement::CommBeaconMeasurement()
:	CommBeaconMeasurementCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommBeaconMeasurement::CommBeaconMeasurement(const CommBasicObjects::CommTimeStamp &timeStamp, const std::string &uuid, const int &major, const int &minor, const float &rssi, const float &txPower, const float &distance, const bool &distanceIsValid)
:	CommBeaconMeasurementCore() // base constructor sets default values as defined in the model
{
	setTimeStamp(timeStamp);
	setUuid(uuid);
	setMajor(major);
	setMinor(minor);
	setRssi(rssi);
	setTxPower(txPower);
	setDistance(distance);
	setDistanceIsValid(distanceIsValid);
}
 */

CommBeaconMeasurement::CommBeaconMeasurement(const CommBeaconMeasurementCore &commBeaconMeasurement)
:	CommBeaconMeasurementCore(commBeaconMeasurement)
{  }

CommBeaconMeasurement::CommBeaconMeasurement(const DATATYPE &commBeaconMeasurement)
:	CommBeaconMeasurementCore(commBeaconMeasurement)
{  }

CommBeaconMeasurement::~CommBeaconMeasurement()
{  }
