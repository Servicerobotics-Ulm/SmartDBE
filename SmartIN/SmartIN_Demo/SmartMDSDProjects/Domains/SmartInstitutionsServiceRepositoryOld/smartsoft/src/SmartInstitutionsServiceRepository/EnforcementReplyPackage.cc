//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "SmartInstitutions_ServiceRepository/EnforcementReplyPackage.hh"

using namespace SmartInstitutions_ServiceRepository;

EnforcementReplyPackage::EnforcementReplyPackage()
:	EnforcementReplyPackageCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
EnforcementReplyPackage::EnforcementReplyPackage(const SmartInstitutions_ServiceRepository::PackageIdentifier &id, const SmartInstitutions_ServiceRepository::PackageIdentifier &replyingto, const CommBasicObjects::CommTimeStamp &timestampe, const SmartInstitutions_ServiceRepository::MemberIdentifier &to, const SmartInstitutions_ServiceRepository::MemberIdentifier &from, const SmartInstitutions_ServiceRepository::InstitutionStatus &context, const SmartInstitutions_ServiceRepository::EnforcementInstruction &instruction, const std::string &ifCustom)
:	EnforcementReplyPackageCore() // base constructor sets default values as defined in the model
{
	setId(id);
	setReplyingto(replyingto);
	setTimestampe(timestampe);
	setTo(to);
	setFrom(from);
	setContext(context);
	setInstruction(instruction);
	setIfCustom(ifCustom);
}
 */

EnforcementReplyPackage::EnforcementReplyPackage(const EnforcementReplyPackageCore &enforcementReplyPackage)
:	EnforcementReplyPackageCore(enforcementReplyPackage)
{  }

EnforcementReplyPackage::EnforcementReplyPackage(const DATATYPE &enforcementReplyPackage)
:	EnforcementReplyPackageCore(enforcementReplyPackage)
{  }

EnforcementReplyPackage::~EnforcementReplyPackage()
{  }
