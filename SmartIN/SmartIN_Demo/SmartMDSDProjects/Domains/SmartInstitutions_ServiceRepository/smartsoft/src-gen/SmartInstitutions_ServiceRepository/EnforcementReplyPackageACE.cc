//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "SmartInstitutions_ServiceRepository/EnforcementReplyPackageACE.hh"
#include <ace/SString.h>
#include "SmartInstitutions_ServiceRepository/MemberIdentifierACE.hh"
#include "SmartInstitutions_ServiceRepository/PackageIdentifierACE.hh"
#include "SmartInstitutions_ServiceRepository/InstitutionStatusACE.hh"

// serialization operator for element EnforcementReplyPackage
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const SmartInstitutions_ServiceRepositoryIDL::EnforcementReplyPackage &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element id
	good_bit = good_bit && cdr << data.id;
	// serialize list-element replyingto
	good_bit = good_bit && cdr << data.replyingto;
	// serialize list-element to
	good_bit = good_bit && cdr << data.to;
	// serialize list-element from
	good_bit = good_bit && cdr << data.from;
	// serialize list-element context
	good_bit = good_bit && cdr << data.context;
	// serialize list-element reply
	good_bit = good_bit && cdr << ACE_CString(data.reply.c_str());
	
	return good_bit;
}

// de-serialization operator for element EnforcementReplyPackage
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, SmartInstitutions_ServiceRepositoryIDL::EnforcementReplyPackage &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element id
	good_bit = good_bit && cdr >> data.id;
	// deserialize type element replyingto
	good_bit = good_bit && cdr >> data.replyingto;
	// deserialize type element to
	good_bit = good_bit && cdr >> data.to;
	// deserialize type element from
	good_bit = good_bit && cdr >> data.from;
	// deserialize type element context
	good_bit = good_bit && cdr >> data.context;
	// deserialize string-type element reply
	ACE_CString data_reply_str;
	good_bit = good_bit && cdr >> data_reply_str;
	data.reply = data_reply_str.c_str();
	
	return good_bit;
}

// serialization operator for CommunicationObject EnforcementReplyPackage
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const SmartInstitutions_ServiceRepository::EnforcementReplyPackage &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject EnforcementReplyPackage
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, SmartInstitutions_ServiceRepository::EnforcementReplyPackage &obj)
{
	return cdr >> obj.set();
}
