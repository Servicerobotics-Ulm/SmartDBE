//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "SmartInstitutions_ServiceRepository/InstitutionStatus.hh"

using namespace SmartInstitutions_ServiceRepository;

InstitutionStatus::InstitutionStatus()
:	InstitutionStatusCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
InstitutionStatus::InstitutionStatus(const SmartInstitutions_ServiceRepository::InstitutionIdentifier &institute, const SmartInstitutions_ServiceRepository::InstitutionCategory &category, const SmartInstitutions_ServiceRepository::InstitutionType &type, const std::vector<SmartInstitutions_ServiceRepository::MemberIdentifier> &institutionMembers, const std::vector<SmartInstitutions_ServiceRepository::MemberIdentifier> &institutionEnforcers, const SmartInstitutions_ServiceRepository::InstitutionPhase &phase, const CommBasicObjects::CommTimeStamp &signed_at, const SmartInstitutions_ServiceRepository::MemberIdentifier &signed_by)
:	InstitutionStatusCore() // base constructor sets default values as defined in the model
{
	setInstitute(institute);
	setCategory(category);
	setType(type);
	setInstitutionMembers(institutionMembers);
	setInstitutionEnforcers(institutionEnforcers);
	setPhase(phase);
	setSigned_at(signed_at);
	setSigned_by(signed_by);
}
 */

InstitutionStatus::InstitutionStatus(const InstitutionStatusCore &institutionStatus)
:	InstitutionStatusCore(institutionStatus)
{  }

InstitutionStatus::InstitutionStatus(const DATATYPE &institutionStatus)
:	InstitutionStatusCore(institutionStatus)
{  }

InstitutionStatus::~InstitutionStatus()
{  }
