//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommKBEventParamJSON.hh"


namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::CommKBEventParam& obj, nlohmann::json& j)
{
	// query: String
	j["query"] = obj.query;
	// latestState: String
	j["latestState"] = obj.latestState;
	// formatingClause: String
	j["formatingClause"] = obj.formatingClause;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::CommKBEventParam& obj)
{
	// query: String
	if(j.contains("query") && j["query"].is_string()) {
		obj.query = j["query"].get<std::string>();
	}
	// latestState: String
	if(j.contains("latestState") && j["latestState"].is_string()) {
		obj.latestState = j["latestState"].get<std::string>();
	}
	// formatingClause: String
	if(j.contains("formatingClause") && j["formatingClause"].is_string()) {
		obj.formatingClause = j["formatingClause"].get<std::string>();
	}
}

} // end namespace CommBasicObjectsIDL
