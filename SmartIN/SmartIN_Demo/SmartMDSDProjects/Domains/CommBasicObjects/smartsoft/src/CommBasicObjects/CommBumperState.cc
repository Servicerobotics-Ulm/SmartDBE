//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommBasicObjects/CommBumperState.hh"

using namespace CommBasicObjects;

CommBumperState::CommBumperState()
:	CommBumperStateCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommBumperState::CommBumperState(const CommBasicObjects::BumperStateType &bumperState)
:	CommBumperStateCore() // base constructor sets default values as defined in the model
{
	setBumperState(bumperState);
}
 */

void CommBumperState::setBumperState(bool state){
	if(state == true){
		this->idl_CommBumperState.bumperState = CommBasicObjects::BumperStateType::BUMPER_PRESSED;
	} else {
		this->idl_CommBumperState.bumperState = CommBasicObjects::BumperStateType::BUMPER_NOT_SUPPORTED;
	}
}

bool CommBumperState::getBumperState(void){
	if(this->idl_CommBumperState.bumperState == CommBasicObjects::BumperStateType::BUMPER_PRESSED){
		return true;
	} else {
		return false;
	}
}

CommBumperState::CommBumperState(const CommBumperStateCore &commBumperState)
:	CommBumperStateCore(commBumperState)
{  }

CommBumperState::CommBumperState(const DATATYPE &commBumperState)
:	CommBumperStateCore(commBumperState)
{  }

CommBumperState::~CommBumperState()
{  }
