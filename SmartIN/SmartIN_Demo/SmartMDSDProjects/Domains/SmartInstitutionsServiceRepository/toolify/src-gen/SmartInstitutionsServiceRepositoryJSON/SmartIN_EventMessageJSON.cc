//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "SmartIN_EventMessageJSON.hh"

#include "SmartInstitutionsServiceRepositoryJSON/EnforcementInstructionPackageJSON.hh"
#include "SmartInstitutionsServiceRepositoryJSON/EnforcementReplyPackageJSON.hh"
#include "SmartInstitutionsServiceRepositoryJSON/EnforcementReportPackageJSON.hh"

namespace SmartInstitutionsServiceRepositoryIDL {

void to_json(const SmartInstitutionsServiceRepositoryIDL::SmartIN_EventMessage& obj, nlohmann::json& j)
{
	// usetype: SmartINPackageTypeEnums
	j["usetype"] = obj.usetype;
	// ifEnforcementInstructionPackage: EnforcementInstructionPackage
	to_json(obj.ifEnforcementInstructionPackage, j["ifEnforcementInstructionPackage"]);
	// ifEnforcementReplyPackage: EnforcementReplyPackage
	to_json(obj.ifEnforcementReplyPackage, j["ifEnforcementReplyPackage"]);
	// ifEnforcementReportPackage: EnforcementReportPackage
	to_json(obj.ifEnforcementReportPackage, j["ifEnforcementReportPackage"]);
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, SmartInstitutionsServiceRepositoryIDL::SmartIN_EventMessage& obj)
{
	// usetype: SmartINPackageTypeEnums
	if(j.contains("usetype") && j["usetype"].is_number_integer()) {
		obj.usetype = j["usetype"].get<int>();
	}
	// ifEnforcementInstructionPackage: EnforcementInstructionPackage
	if(j.contains("ifEnforcementInstructionPackage") && j["ifEnforcementInstructionPackage"].is_object()) {
		//from_json(j["ifEnforcementInstructionPackage"], obj.ifEnforcementInstructionPackage);
		obj.ifEnforcementInstructionPackage = j["ifEnforcementInstructionPackage"].get<SmartInstitutionsServiceRepositoryIDL::EnforcementInstructionPackage>();
	}
	// ifEnforcementReplyPackage: EnforcementReplyPackage
	if(j.contains("ifEnforcementReplyPackage") && j["ifEnforcementReplyPackage"].is_object()) {
		//from_json(j["ifEnforcementReplyPackage"], obj.ifEnforcementReplyPackage);
		obj.ifEnforcementReplyPackage = j["ifEnforcementReplyPackage"].get<SmartInstitutionsServiceRepositoryIDL::EnforcementReplyPackage>();
	}
	// ifEnforcementReportPackage: EnforcementReportPackage
	if(j.contains("ifEnforcementReportPackage") && j["ifEnforcementReportPackage"].is_object()) {
		//from_json(j["ifEnforcementReportPackage"], obj.ifEnforcementReportPackage);
		obj.ifEnforcementReportPackage = j["ifEnforcementReportPackage"].get<SmartInstitutionsServiceRepositoryIDL::EnforcementReportPackage>();
	}
}

} // end namespace SmartInstitutionsServiceRepositoryIDL
