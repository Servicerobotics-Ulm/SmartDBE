//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommNavigationObjects/CommCorridorNavigationNodeRequest.hh"

using namespace CommNavigationObjects;

CommCorridorNavigationNodeRequest::CommCorridorNavigationNodeRequest()
:	CommCorridorNavigationNodeRequestCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommCorridorNavigationNodeRequest::CommCorridorNavigationNodeRequest(const CommNavigationObjects::NavigationNodeRequestType &requestType, const std::vector<CommNavigationObjects::CommCorridorNode> &nodesList, const std::string &robotID)
:	CommCorridorNavigationNodeRequestCore() // base constructor sets default values as defined in the model
{
	setRequestType(requestType);
	setNodesList(nodesList);
	setRobotID(robotID);
}
 */

CommCorridorNavigationNodeRequest::CommCorridorNavigationNodeRequest(const CommCorridorNavigationNodeRequestCore &commCorridorNavigationNodeRequest)
:	CommCorridorNavigationNodeRequestCore(commCorridorNavigationNodeRequest)
{  }

CommCorridorNavigationNodeRequest::CommCorridorNavigationNodeRequest(const DATATYPE &commCorridorNavigationNodeRequest)
:	CommCorridorNavigationNodeRequestCore(commCorridorNavigationNodeRequest)
{  }

CommCorridorNavigationNodeRequest::~CommCorridorNavigationNodeRequest()
{  }

void CommCorridorNavigationNodeRequest::setNodes(std::deque<graphNode> &p){

	this->resizeNodesList(p.size());
	unsigned int i =0;
	for(std::deque<graphNode>::iterator it=p.begin();it!=p.end();it++,i++){
		CommNavigationObjects::CommCorridorNode node(*it);
		this->setNodesListElemAtPos(i,node);
	}
}
