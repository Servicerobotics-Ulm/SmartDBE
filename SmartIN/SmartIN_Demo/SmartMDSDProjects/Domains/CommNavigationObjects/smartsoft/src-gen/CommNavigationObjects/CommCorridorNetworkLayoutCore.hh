//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMNAVIGATIONOBJECTS_COMMCORRIDORNETWORKLAYOUT_CORE_H_
#define COMMNAVIGATIONOBJECTS_COMMCORRIDORNETWORKLAYOUT_CORE_H_

#include "CommNavigationObjects/CommCorridorNetworkLayoutData.hh"
#include "CommBasicObjects/CommDataFile.hh"
#include "CommNavigationObjects/CommCorridorNetworkStatus.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommNavigationObjects {
	
class CommCorridorNetworkLayoutCore {
protected:
	// data structure
	CommNavigationObjectsIDL::CommCorridorNetworkLayout idl_CommCorridorNetworkLayout;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommNavigationObjectsIDL::CommCorridorNetworkLayout DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CommCorridorNetworkLayoutCore();
	CommCorridorNetworkLayoutCore(const DATATYPE &data);
	// default destructor
	virtual ~CommCorridorNetworkLayoutCore();
	
	const DATATYPE& get() const { return idl_CommCorridorNetworkLayout; }
	operator const DATATYPE&() const { return idl_CommCorridorNetworkLayout; }
	DATATYPE& set() { return idl_CommCorridorNetworkLayout; }

	static inline std::string identifier(void) { return "CommNavigationObjects::CommCorridorNetworkLayout"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element NetworkStatus
	inline CommNavigationObjects::CommCorridorNetworkStatus getNetworkStatus() const { return CommNavigationObjects::CommCorridorNetworkStatus(idl_CommCorridorNetworkLayout.networkStatus); }
	inline CommCorridorNetworkLayoutCore& setNetworkStatus(const CommNavigationObjects::CommCorridorNetworkStatus &networkStatus) { idl_CommCorridorNetworkLayout.networkStatus = networkStatus; return *this; }
	
	// getter and setter for element LayoutFile
	inline CommBasicObjects::CommDataFile getLayoutFile() const { return CommBasicObjects::CommDataFile(idl_CommCorridorNetworkLayout.layoutFile); }
	inline CommCorridorNetworkLayoutCore& setLayoutFile(const CommBasicObjects::CommDataFile &layoutFile) { idl_CommCorridorNetworkLayout.layoutFile = layoutFile; return *this; }
};

} /* namespace CommNavigationObjects */
#endif /* COMMNAVIGATIONOBJECTS_COMMCORRIDORNETWORKLAYOUT_CORE_H_ */
