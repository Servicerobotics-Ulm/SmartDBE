//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommNavigationObjects/CommNavigationTopologyPartACE.hh"
#include <ace/SString.h>
#include "CommNavigationObjects/enumNavigationPartTypeData.hh"

// serialization operator for element CommNavigationTopologyPart
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjectsIDL::CommNavigationTopologyPart &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element type
	good_bit = good_bit && cdr.write_long(data.type);
	// serialize list-element id
	good_bit = good_bit && cdr.write_ulong(data.id);
	// serialize list-element name
	good_bit = good_bit && cdr << ACE_CString(data.name.c_str());
	// serialize list-element contained_location_ids
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.contained_location_ids.size());
	good_bit = good_bit && cdr.write_ulong_array(data.contained_location_ids.data(), data.contained_location_ids.size());
	
	return good_bit;
}

// de-serialization operator for element CommNavigationTopologyPart
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjectsIDL::CommNavigationTopologyPart &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element type
	good_bit = good_bit && cdr.read_long(data.type);
	// deserialize type element id
	good_bit = good_bit && cdr.read_ulong(data.id);
	// deserialize string-type element name
	ACE_CString data_name_str;
	good_bit = good_bit && cdr >> data_name_str;
	data.name = data_name_str.c_str();
	// deserialize list-type element contained_location_ids
	ACE_CDR::ULong data_contained_location_idsNbr;
	good_bit = good_bit && cdr >> data_contained_location_idsNbr;
	data.contained_location_ids.resize(data_contained_location_idsNbr);
	good_bit = good_bit && cdr.read_ulong_array(data.contained_location_ids.data(), data_contained_location_idsNbr);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommNavigationTopologyPart
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjects::CommNavigationTopologyPart &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommNavigationTopologyPart
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjects::CommNavigationTopologyPart &obj)
{
	return cdr >> obj.set();
}
