//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "EnforcementReport_SendWrapper.hh"

// include component's main class
#include "SmartINJoystickServer.hh"

// other extensin includes

EnforcementReport_SendWrapper::EnforcementReport_SendWrapper(Smart::ISendClientPattern<SmartInstitutionsServiceRepository::EnforcementReportPackage> *enforcementReport_Send) {
	this->enforcementReport_Send = enforcementReport_Send;
	update_status = Smart::SMART_NODATA;
}

EnforcementReport_SendWrapper::~EnforcementReport_SendWrapper() {
}


Smart::StatusCode EnforcementReport_SendWrapper::send(SmartInstitutionsServiceRepository::EnforcementReportPackage &enforcementReport_SendDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = enforcementReport_SendDataObject;
	update_status = enforcementReport_Send->send(enforcementReport_SendDataObject);
	return update_status;
}

Smart::StatusCode EnforcementReport_SendWrapper::getLatestUpdate(SmartInstitutionsServiceRepository::EnforcementReportPackage &enforcementReport_SendDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	enforcementReport_SendDataObject = updateData;
	return update_status;
}
