//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _ENFORCEMENTREPORT_SEND_UPCALL_MANAGER_HH
#define _ENFORCEMENTREPORT_SEND_UPCALL_MANAGER_HH

#include <list>
#include "aceSmartSoft.hh"
#include "EnforcementReport_SendUpcallInterface.hh"

/** EnforcementReport_SendUpcallManager connects input-handling with Upcall propagation
 *
 * This class implements an InputHandler for the InputPort EnforcementReport_Send and propagates the handling 
 * of incoming data to all associated (i.e. attached) Upcalls.
 */
class EnforcementReport_SendUpcallManager
:	public Smart::IInputHandler<SmartInstitutionsServiceRepository::EnforcementReportPackage>
{
private:
	// list of associated updalls
	std::list<EnforcementReport_SendUpcallInterface*> upcalls;

	// call the on_EnforcementReport_Send of all the attached EnforcementReport_SendUpcallInterfaces
	void notify_upcalls(const SmartInstitutionsServiceRepository::EnforcementReportPackage &input);
	
protected:
	virtual void handle_input(const SmartInstitutionsServiceRepository::EnforcementReportPackage &input) {
		// relay input-handling to all attached EnforcementReport_SendUpcallInterfaces
		this->notify_upcalls(input);
	}
public:
	EnforcementReport_SendUpcallManager(
		Smart::InputSubject<SmartInstitutionsServiceRepository::EnforcementReportPackage> *subject,
		const int &prescaleFactor=1
	);
	virtual ~EnforcementReport_SendUpcallManager();
	
	void attach(EnforcementReport_SendUpcallInterface *upcall);
	void detach(EnforcementReport_SendUpcallInterface *upcall);
};

#endif
