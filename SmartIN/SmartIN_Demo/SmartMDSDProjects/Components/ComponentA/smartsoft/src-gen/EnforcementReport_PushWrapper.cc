//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "EnforcementReport_PushWrapper.hh"

// include component's main class
#include "ComponentA.hh"

// other extensin includes

EnforcementReport_PushWrapper::EnforcementReport_PushWrapper(Smart::IPushServerPattern<SmartInstitutionsServiceRepository::EnforcementReportPackage> *enforcementReport_Push) {
	this->enforcementReport_Push = enforcementReport_Push;
	update_status = Smart::SMART_NODATA;
}

EnforcementReport_PushWrapper::~EnforcementReport_PushWrapper() {
}


Smart::StatusCode EnforcementReport_PushWrapper::put(SmartInstitutionsServiceRepository::EnforcementReportPackage &enforcementReport_PushDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = enforcementReport_PushDataObject;
	update_status = enforcementReport_Push->put(enforcementReport_PushDataObject);
	return update_status;
}

Smart::StatusCode EnforcementReport_PushWrapper::getLatestUpdate(SmartInstitutionsServiceRepository::EnforcementReportPackage &enforcementReport_PushDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	enforcementReport_PushDataObject = updateData;
	return update_status;
}
