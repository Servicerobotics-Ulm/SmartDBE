//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _ENFORCEMENTINSTRUCTION_SENDWRAPPER_HH
#define _ENFORCEMENTINSTRUCTION_SENDWRAPPER_HH

#include <mutex>
#include "aceSmartSoft.hh"

// include communication objects
#include <SmartInstitutionsServiceRepository/EnforcementInstructionPackage.hh>
#include <SmartInstitutionsServiceRepository/EnforcementInstructionPackageACE.hh>


class EnforcementInstruction_SendWrapper
{
private:
	std::mutex update_mutex;
	Smart::StatusCode update_status;
	
	SmartInstitutionsServiceRepository::EnforcementInstructionPackage updateData;
	
	Smart::ISendClientPattern<SmartInstitutionsServiceRepository::EnforcementInstructionPackage> *enforcementInstruction_Send;
	
public:
	EnforcementInstruction_SendWrapper(Smart::ISendClientPattern<SmartInstitutionsServiceRepository::EnforcementInstructionPackage> *enforcementInstruction_Send);
	virtual ~EnforcementInstruction_SendWrapper();
	
	Smart::StatusCode send(SmartInstitutionsServiceRepository::EnforcementInstructionPackage &enforcementInstruction_SendDataObject);
	
	Smart::StatusCode getLatestUpdate(SmartInstitutionsServiceRepository::EnforcementInstructionPackage &enforcementInstruction_SendDataObject);
	
};

#endif // _ENFORCEMENTINSTRUCTION_SENDWRAPPER_HH
