//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef ENFORCERCAT1_PORTFACTORYINTERFACE_HH_
#define ENFORCERCAT1_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <SmartInstitutionsServiceRepository/EnforcementInstructionPackage.hh>
#include <SmartInstitutionsServiceRepository/EnforcementInstructionPackageACE.hh>
#include <SmartInstitutionsServiceRepository/EnforcementReplyPackage.hh>
#include <SmartInstitutionsServiceRepository/EnforcementReplyPackageACE.hh>
#include <SmartInstitutionsServiceRepository/EnforcementReportPackage.hh>
#include <SmartInstitutionsServiceRepository/EnforcementReportPackageACE.hh>
#include <SmartInstitutionsServiceRepository/MemberIdentifier.hh>
#include <SmartInstitutionsServiceRepository/MemberIdentifierACE.hh>

#include <chrono>

// include component's main class
#include "EnforcerCat1.hh"

// forward declaration
class EnforcerCat1;

class EnforcerCat1PortFactoryInterface {
public:
	EnforcerCat1PortFactoryInterface() { };
	virtual ~EnforcerCat1PortFactoryInterface() { };

	virtual void initialize(EnforcerCat1 *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::ISendClientPattern<SmartInstitutionsServiceRepository::EnforcementInstructionPackage> * createEnforcementInstruction_Send() = 0;
	virtual Smart::IQueryClientPattern<SmartInstitutionsServiceRepository::MemberIdentifier, SmartInstitutionsServiceRepository::EnforcementReportPackage> * createReport_QueryRequester() = 0;
	
	virtual Smart::IPushServerPattern<SmartInstitutionsServiceRepository::EnforcementInstructionPackage> * createEnforcementInstruction_Push(const std::string &serviceName) = 0;
	virtual Smart::ISendServerPattern<SmartInstitutionsServiceRepository::EnforcementReplyPackage> * createEnforcementReply_Send(const std::string &serviceName) = 0;
	virtual Smart::ISendServerPattern<SmartInstitutionsServiceRepository::EnforcementReportPackage> * createEnforcementReport_Send(const std::string &serviceName) = 0;

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* ENFORCERCAT1_PORTFACTORYINTERFACE_HH_ */
