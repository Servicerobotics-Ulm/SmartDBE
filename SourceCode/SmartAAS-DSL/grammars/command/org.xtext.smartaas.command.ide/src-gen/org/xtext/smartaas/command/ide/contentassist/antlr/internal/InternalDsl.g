/*
 * generated by Xtext 2.23.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.smartaas.command.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.smartaas.command.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.smartaas.command.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getCommandsinputsocketAssignment()); }
			(rule__Model__CommandsinputsocketAssignment)
			{ after(grammarAccess.getModelAccess().getCommandsinputsocketAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getCommandsinputsocketAssignment()); }
			(rule__Model__CommandsinputsocketAssignment)*
			{ after(grammarAccess.getModelAccess().getCommandsinputsocketAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandSubmodel
entryRuleCommandSubmodel
:
{ before(grammarAccess.getCommandSubmodelRule()); }
	 ruleCommandSubmodel
{ after(grammarAccess.getCommandSubmodelRule()); } 
	 EOF 
;

// Rule CommandSubmodel
ruleCommandSubmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandSubmodelAccess().getGroup()); }
		(rule__CommandSubmodel__Group__0)
		{ after(grammarAccess.getCommandSubmodelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandText
entryRuleCommandText
:
{ before(grammarAccess.getCommandTextRule()); }
	 ruleCommandText
{ after(grammarAccess.getCommandTextRule()); } 
	 EOF 
;

// Rule CommandText
ruleCommandText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandTextAccess().getGroup()); }
		(rule__CommandText__Group__0)
		{ after(grammarAccess.getCommandTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSID
entryRuleSID
:
{ before(grammarAccess.getSIDRule()); }
	 ruleSID
{ after(grammarAccess.getSIDRule()); } 
	 EOF 
;

// Rule SID
ruleSID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIDAccess().getGroup()); }
		(rule__SID__Group__0)
		{ after(grammarAccess.getSIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__0__Impl
	rule__CommandSubmodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getAASKeyword_0()); }
	'AAS'
	{ after(grammarAccess.getCommandSubmodelAccess().getAASKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__1__Impl
	rule__CommandSubmodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getCommandSubmodelAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__2__Impl
	rule__CommandSubmodel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getCommandINPUTSocketKeyword_2()); }
	'CommandINPUTSocket'
	{ after(grammarAccess.getCommandSubmodelAccess().getCommandINPUTSocketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__3__Impl
	rule__CommandSubmodel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getNameAssignment_3()); }
	(rule__CommandSubmodel__NameAssignment_3)
	{ after(grammarAccess.getCommandSubmodelAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__4__Impl
	rule__CommandSubmodel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getLeftSquareBracketLeftSquareBracketKeyword_4()); }
	'[['
	{ after(grammarAccess.getCommandSubmodelAccess().getLeftSquareBracketLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__5__Impl
	rule__CommandSubmodel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getSemanticIdAssignment_5()); }
	(rule__CommandSubmodel__SemanticIdAssignment_5)
	{ after(grammarAccess.getCommandSubmodelAccess().getSemanticIdAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__6__Impl
	rule__CommandSubmodel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getRightSquareBracketRightSquareBracketKeyword_6()); }
	']]'
	{ after(grammarAccess.getCommandSubmodelAccess().getRightSquareBracketRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__7__Impl
	rule__CommandSubmodel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getCommandSubmodelAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__8__Impl
	rule__CommandSubmodel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getGroup_8()); }
	(rule__CommandSubmodel__Group_8__0)?
	{ after(grammarAccess.getCommandSubmodelAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getCommandSubmodelAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandSubmodel__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group_8__0__Impl
	rule__CommandSubmodel__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getCommandtextAssignment_8_0()); }
	(rule__CommandSubmodel__CommandtextAssignment_8_0)
	{ after(grammarAccess.getCommandSubmodelAccess().getCommandtextAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandSubmodel__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandSubmodelAccess().getSemicolonKeyword_8_1()); }
	';'
	{ after(grammarAccess.getCommandSubmodelAccess().getSemicolonKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__0__Impl
	rule__CommandText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getCommandTextKeyword_0()); }
	'CommandText'
	{ after(grammarAccess.getCommandTextAccess().getCommandTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__1__Impl
	rule__CommandText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommandTextAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__2__Impl
	rule__CommandText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getNameAssignment_2()); }
	(rule__CommandText__NameAssignment_2)
	{ after(grammarAccess.getCommandTextAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__3__Impl
	rule__CommandText__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getLeftSquareBracketLeftSquareBracketKeyword_3()); }
	'[['
	{ after(grammarAccess.getCommandTextAccess().getLeftSquareBracketLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__4__Impl
	rule__CommandText__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getSemanticIdAssignment_4()); }
	(rule__CommandText__SemanticIdAssignment_4)
	{ after(grammarAccess.getCommandTextAccess().getSemanticIdAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandText__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandTextAccess().getRightSquareBracketRightSquareBracketKeyword_5()); }
	']]'
	{ after(grammarAccess.getCommandTextAccess().getRightSquareBracketRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SID__Group__0__Impl
	rule__SID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIDAccess().getSemanticIdKeyword_0()); }
	'SemanticId'
	{ after(grammarAccess.getSIDAccess().getSemanticIdKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SID__Group__1__Impl
	rule__SID__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIDAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSIDAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SID__Group__2__Impl
	rule__SID__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIDAccess().getNameAssignment_2()); }
	(rule__SID__NameAssignment_2)
	{ after(grammarAccess.getSIDAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SID__Group__3__Impl
	rule__SID__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIDAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getSIDAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SID__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIDAccess().getIIAssignment_4()); }
	(rule__SID__IIAssignment_4)
	{ after(grammarAccess.getSIDAccess().getIIAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CommandsinputsocketAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCommandsinputsocketCommandSubmodelParserRuleCall_0()); }
		ruleCommandSubmodel
		{ after(grammarAccess.getModelAccess().getCommandsinputsocketCommandSubmodelParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandSubmodelAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCommandSubmodelAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__SemanticIdAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandSubmodelAccess().getSemanticIdSIDParserRuleCall_5_0()); }
		ruleSID
		{ after(grammarAccess.getCommandSubmodelAccess().getSemanticIdSIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandSubmodel__CommandtextAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandSubmodelAccess().getCommandtextCommandTextParserRuleCall_8_0_0()); }
		ruleCommandText
		{ after(grammarAccess.getCommandSubmodelAccess().getCommandtextCommandTextParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandTextAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCommandTextAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandText__SemanticIdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandTextAccess().getSemanticIdSIDParserRuleCall_4_0()); }
		ruleSID
		{ after(grammarAccess.getCommandTextAccess().getSemanticIdSIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIDAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSIDAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SID__IIAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIDAccess().getIISTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getSIDAccess().getIISTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
