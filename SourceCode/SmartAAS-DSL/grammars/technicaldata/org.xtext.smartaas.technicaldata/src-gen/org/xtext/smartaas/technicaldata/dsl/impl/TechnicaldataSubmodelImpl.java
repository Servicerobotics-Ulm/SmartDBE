/**
 * generated by Xtext 2.23.0
 */
package org.xtext.smartaas.technicaldata.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smartaas.technicaldata.dsl.DslPackage;
import org.xtext.smartaas.technicaldata.dsl.SID;
import org.xtext.smartaas.technicaldata.dsl.SubmodelElementCollectionFurtherInformation;
import org.xtext.smartaas.technicaldata.dsl.SubmodelElementCollectionGeneralInformation;
import org.xtext.smartaas.technicaldata.dsl.SubmodelElementCollectionProductClassifications;
import org.xtext.smartaas.technicaldata.dsl.SubmodelElementCollectionTechnicalProperties;
import org.xtext.smartaas.technicaldata.dsl.TechnicaldataSubmodel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Technicaldata Submodel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getSemanticId <em>Semantic Id</em>}</li>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getGeneralInformation <em>General Information</em>}</li>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getProductClassifications <em>Product Classifications</em>}</li>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getTechnicalProperties <em>Technical Properties</em>}</li>
 *   <li>{@link org.xtext.smartaas.technicaldata.dsl.impl.TechnicaldataSubmodelImpl#getFurtherInformation <em>Further Information</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TechnicaldataSubmodelImpl extends MinimalEObjectImpl.Container implements TechnicaldataSubmodel
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSemanticId() <em>Semantic Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemanticId()
   * @generated
   * @ordered
   */
  protected SID semanticId;

  /**
   * The cached value of the '{@link #getGeneralInformation() <em>General Information</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeneralInformation()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionGeneralInformation generalInformation;

  /**
   * The cached value of the '{@link #getProductClassifications() <em>Product Classifications</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductClassifications()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionProductClassifications productClassifications;

  /**
   * The cached value of the '{@link #getTechnicalProperties() <em>Technical Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTechnicalProperties()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionTechnicalProperties technicalProperties;

  /**
   * The cached value of the '{@link #getFurtherInformation() <em>Further Information</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFurtherInformation()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionFurtherInformation furtherInformation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TechnicaldataSubmodelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.TECHNICALDATA_SUBMODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SID getSemanticId()
  {
    return semanticId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSemanticId(SID newSemanticId, NotificationChain msgs)
  {
    SID oldSemanticId = semanticId;
    semanticId = newSemanticId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID, oldSemanticId, newSemanticId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSemanticId(SID newSemanticId)
  {
    if (newSemanticId != semanticId)
    {
      NotificationChain msgs = null;
      if (semanticId != null)
        msgs = ((InternalEObject)semanticId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID, null, msgs);
      if (newSemanticId != null)
        msgs = ((InternalEObject)newSemanticId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID, null, msgs);
      msgs = basicSetSemanticId(newSemanticId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID, newSemanticId, newSemanticId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionGeneralInformation getGeneralInformation()
  {
    return generalInformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGeneralInformation(SubmodelElementCollectionGeneralInformation newGeneralInformation, NotificationChain msgs)
  {
    SubmodelElementCollectionGeneralInformation oldGeneralInformation = generalInformation;
    generalInformation = newGeneralInformation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION, oldGeneralInformation, newGeneralInformation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGeneralInformation(SubmodelElementCollectionGeneralInformation newGeneralInformation)
  {
    if (newGeneralInformation != generalInformation)
    {
      NotificationChain msgs = null;
      if (generalInformation != null)
        msgs = ((InternalEObject)generalInformation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION, null, msgs);
      if (newGeneralInformation != null)
        msgs = ((InternalEObject)newGeneralInformation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION, null, msgs);
      msgs = basicSetGeneralInformation(newGeneralInformation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION, newGeneralInformation, newGeneralInformation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionProductClassifications getProductClassifications()
  {
    return productClassifications;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProductClassifications(SubmodelElementCollectionProductClassifications newProductClassifications, NotificationChain msgs)
  {
    SubmodelElementCollectionProductClassifications oldProductClassifications = productClassifications;
    productClassifications = newProductClassifications;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS, oldProductClassifications, newProductClassifications);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProductClassifications(SubmodelElementCollectionProductClassifications newProductClassifications)
  {
    if (newProductClassifications != productClassifications)
    {
      NotificationChain msgs = null;
      if (productClassifications != null)
        msgs = ((InternalEObject)productClassifications).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS, null, msgs);
      if (newProductClassifications != null)
        msgs = ((InternalEObject)newProductClassifications).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS, null, msgs);
      msgs = basicSetProductClassifications(newProductClassifications, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS, newProductClassifications, newProductClassifications));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionTechnicalProperties getTechnicalProperties()
  {
    return technicalProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTechnicalProperties(SubmodelElementCollectionTechnicalProperties newTechnicalProperties, NotificationChain msgs)
  {
    SubmodelElementCollectionTechnicalProperties oldTechnicalProperties = technicalProperties;
    technicalProperties = newTechnicalProperties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES, oldTechnicalProperties, newTechnicalProperties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTechnicalProperties(SubmodelElementCollectionTechnicalProperties newTechnicalProperties)
  {
    if (newTechnicalProperties != technicalProperties)
    {
      NotificationChain msgs = null;
      if (technicalProperties != null)
        msgs = ((InternalEObject)technicalProperties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES, null, msgs);
      if (newTechnicalProperties != null)
        msgs = ((InternalEObject)newTechnicalProperties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES, null, msgs);
      msgs = basicSetTechnicalProperties(newTechnicalProperties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES, newTechnicalProperties, newTechnicalProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionFurtherInformation getFurtherInformation()
  {
    return furtherInformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFurtherInformation(SubmodelElementCollectionFurtherInformation newFurtherInformation, NotificationChain msgs)
  {
    SubmodelElementCollectionFurtherInformation oldFurtherInformation = furtherInformation;
    furtherInformation = newFurtherInformation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION, oldFurtherInformation, newFurtherInformation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFurtherInformation(SubmodelElementCollectionFurtherInformation newFurtherInformation)
  {
    if (newFurtherInformation != furtherInformation)
    {
      NotificationChain msgs = null;
      if (furtherInformation != null)
        msgs = ((InternalEObject)furtherInformation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION, null, msgs);
      if (newFurtherInformation != null)
        msgs = ((InternalEObject)newFurtherInformation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION, null, msgs);
      msgs = basicSetFurtherInformation(newFurtherInformation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION, newFurtherInformation, newFurtherInformation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID:
        return basicSetSemanticId(null, msgs);
      case DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION:
        return basicSetGeneralInformation(null, msgs);
      case DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS:
        return basicSetProductClassifications(null, msgs);
      case DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES:
        return basicSetTechnicalProperties(null, msgs);
      case DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION:
        return basicSetFurtherInformation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.TECHNICALDATA_SUBMODEL__NAME:
        return getName();
      case DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID:
        return getSemanticId();
      case DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION:
        return getGeneralInformation();
      case DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS:
        return getProductClassifications();
      case DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES:
        return getTechnicalProperties();
      case DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION:
        return getFurtherInformation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.TECHNICALDATA_SUBMODEL__NAME:
        setName((String)newValue);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID:
        setSemanticId((SID)newValue);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION:
        setGeneralInformation((SubmodelElementCollectionGeneralInformation)newValue);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS:
        setProductClassifications((SubmodelElementCollectionProductClassifications)newValue);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES:
        setTechnicalProperties((SubmodelElementCollectionTechnicalProperties)newValue);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION:
        setFurtherInformation((SubmodelElementCollectionFurtherInformation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.TECHNICALDATA_SUBMODEL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID:
        setSemanticId((SID)null);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION:
        setGeneralInformation((SubmodelElementCollectionGeneralInformation)null);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS:
        setProductClassifications((SubmodelElementCollectionProductClassifications)null);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES:
        setTechnicalProperties((SubmodelElementCollectionTechnicalProperties)null);
        return;
      case DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION:
        setFurtherInformation((SubmodelElementCollectionFurtherInformation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.TECHNICALDATA_SUBMODEL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.TECHNICALDATA_SUBMODEL__SEMANTIC_ID:
        return semanticId != null;
      case DslPackage.TECHNICALDATA_SUBMODEL__GENERAL_INFORMATION:
        return generalInformation != null;
      case DslPackage.TECHNICALDATA_SUBMODEL__PRODUCT_CLASSIFICATIONS:
        return productClassifications != null;
      case DslPackage.TECHNICALDATA_SUBMODEL__TECHNICAL_PROPERTIES:
        return technicalProperties != null;
      case DslPackage.TECHNICALDATA_SUBMODEL__FURTHER_INFORMATION:
        return furtherInformation != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //TechnicaldataSubmodelImpl
