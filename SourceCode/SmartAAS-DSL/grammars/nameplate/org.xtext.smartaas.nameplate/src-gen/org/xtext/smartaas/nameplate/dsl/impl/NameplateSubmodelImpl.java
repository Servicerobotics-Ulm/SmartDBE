/**
 * generated by Xtext 2.23.0
 */
package org.xtext.smartaas.nameplate.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smartaas.nameplate.dsl.AddressSubmodelElementCollection;
import org.xtext.smartaas.nameplate.dsl.DslPackage;
import org.xtext.smartaas.nameplate.dsl.MultiLanguagePropertyManufacturerName;
import org.xtext.smartaas.nameplate.dsl.MultiLanguagePropertyManufacturerProductDesignation;
import org.xtext.smartaas.nameplate.dsl.MultiLanguagePropertyManufacturerProductFamily;
import org.xtext.smartaas.nameplate.dsl.MultiLanguagePropertySerialNumber;
import org.xtext.smartaas.nameplate.dsl.MultiLanguagePropertyYearOfConstruction;
import org.xtext.smartaas.nameplate.dsl.NameplateSubmodel;
import org.xtext.smartaas.nameplate.dsl.SID;
import org.xtext.smartaas.nameplate.dsl.SubmodelElementCollectionAssetSpecificProperties;
import org.xtext.smartaas.nameplate.dsl.SubmodelElementCollectionMarkings;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Nameplate Submodel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getSemanticId <em>Semantic Id</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getManufacturerName <em>Manufacturer Name</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getManufacturerProductDesignation <em>Manufacturer Product Designation</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getAddress <em>Address</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getManufacturerProductFamily <em>Manufacturer Product Family</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getSerialNumber <em>Serial Number</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getYearOfConstruction <em>Year Of Construction</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getMarkings <em>Markings</em>}</li>
 *   <li>{@link org.xtext.smartaas.nameplate.dsl.impl.NameplateSubmodelImpl#getAssetSpecificProperties <em>Asset Specific Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NameplateSubmodelImpl extends MinimalEObjectImpl.Container implements NameplateSubmodel
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSemanticId() <em>Semantic Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemanticId()
   * @generated
   * @ordered
   */
  protected SID semanticId;

  /**
   * The cached value of the '{@link #getManufacturerName() <em>Manufacturer Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getManufacturerName()
   * @generated
   * @ordered
   */
  protected MultiLanguagePropertyManufacturerName manufacturerName;

  /**
   * The cached value of the '{@link #getManufacturerProductDesignation() <em>Manufacturer Product Designation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getManufacturerProductDesignation()
   * @generated
   * @ordered
   */
  protected MultiLanguagePropertyManufacturerProductDesignation manufacturerProductDesignation;

  /**
   * The cached value of the '{@link #getAddress() <em>Address</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected AddressSubmodelElementCollection address;

  /**
   * The cached value of the '{@link #getManufacturerProductFamily() <em>Manufacturer Product Family</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getManufacturerProductFamily()
   * @generated
   * @ordered
   */
  protected MultiLanguagePropertyManufacturerProductFamily manufacturerProductFamily;

  /**
   * The cached value of the '{@link #getSerialNumber() <em>Serial Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSerialNumber()
   * @generated
   * @ordered
   */
  protected MultiLanguagePropertySerialNumber serialNumber;

  /**
   * The cached value of the '{@link #getYearOfConstruction() <em>Year Of Construction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearOfConstruction()
   * @generated
   * @ordered
   */
  protected MultiLanguagePropertyYearOfConstruction yearOfConstruction;

  /**
   * The cached value of the '{@link #getMarkings() <em>Markings</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMarkings()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionMarkings markings;

  /**
   * The cached value of the '{@link #getAssetSpecificProperties() <em>Asset Specific Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssetSpecificProperties()
   * @generated
   * @ordered
   */
  protected SubmodelElementCollectionAssetSpecificProperties assetSpecificProperties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NameplateSubmodelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.NAMEPLATE_SUBMODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SID getSemanticId()
  {
    return semanticId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSemanticId(SID newSemanticId, NotificationChain msgs)
  {
    SID oldSemanticId = semanticId;
    semanticId = newSemanticId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID, oldSemanticId, newSemanticId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSemanticId(SID newSemanticId)
  {
    if (newSemanticId != semanticId)
    {
      NotificationChain msgs = null;
      if (semanticId != null)
        msgs = ((InternalEObject)semanticId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID, null, msgs);
      if (newSemanticId != null)
        msgs = ((InternalEObject)newSemanticId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID, null, msgs);
      msgs = basicSetSemanticId(newSemanticId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID, newSemanticId, newSemanticId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiLanguagePropertyManufacturerName getManufacturerName()
  {
    return manufacturerName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetManufacturerName(MultiLanguagePropertyManufacturerName newManufacturerName, NotificationChain msgs)
  {
    MultiLanguagePropertyManufacturerName oldManufacturerName = manufacturerName;
    manufacturerName = newManufacturerName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME, oldManufacturerName, newManufacturerName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setManufacturerName(MultiLanguagePropertyManufacturerName newManufacturerName)
  {
    if (newManufacturerName != manufacturerName)
    {
      NotificationChain msgs = null;
      if (manufacturerName != null)
        msgs = ((InternalEObject)manufacturerName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME, null, msgs);
      if (newManufacturerName != null)
        msgs = ((InternalEObject)newManufacturerName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME, null, msgs);
      msgs = basicSetManufacturerName(newManufacturerName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME, newManufacturerName, newManufacturerName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiLanguagePropertyManufacturerProductDesignation getManufacturerProductDesignation()
  {
    return manufacturerProductDesignation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetManufacturerProductDesignation(MultiLanguagePropertyManufacturerProductDesignation newManufacturerProductDesignation, NotificationChain msgs)
  {
    MultiLanguagePropertyManufacturerProductDesignation oldManufacturerProductDesignation = manufacturerProductDesignation;
    manufacturerProductDesignation = newManufacturerProductDesignation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION, oldManufacturerProductDesignation, newManufacturerProductDesignation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setManufacturerProductDesignation(MultiLanguagePropertyManufacturerProductDesignation newManufacturerProductDesignation)
  {
    if (newManufacturerProductDesignation != manufacturerProductDesignation)
    {
      NotificationChain msgs = null;
      if (manufacturerProductDesignation != null)
        msgs = ((InternalEObject)manufacturerProductDesignation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION, null, msgs);
      if (newManufacturerProductDesignation != null)
        msgs = ((InternalEObject)newManufacturerProductDesignation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION, null, msgs);
      msgs = basicSetManufacturerProductDesignation(newManufacturerProductDesignation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION, newManufacturerProductDesignation, newManufacturerProductDesignation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AddressSubmodelElementCollection getAddress()
  {
    return address;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAddress(AddressSubmodelElementCollection newAddress, NotificationChain msgs)
  {
    AddressSubmodelElementCollection oldAddress = address;
    address = newAddress;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__ADDRESS, oldAddress, newAddress);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAddress(AddressSubmodelElementCollection newAddress)
  {
    if (newAddress != address)
    {
      NotificationChain msgs = null;
      if (address != null)
        msgs = ((InternalEObject)address).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__ADDRESS, null, msgs);
      if (newAddress != null)
        msgs = ((InternalEObject)newAddress).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__ADDRESS, null, msgs);
      msgs = basicSetAddress(newAddress, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__ADDRESS, newAddress, newAddress));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiLanguagePropertyManufacturerProductFamily getManufacturerProductFamily()
  {
    return manufacturerProductFamily;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetManufacturerProductFamily(MultiLanguagePropertyManufacturerProductFamily newManufacturerProductFamily, NotificationChain msgs)
  {
    MultiLanguagePropertyManufacturerProductFamily oldManufacturerProductFamily = manufacturerProductFamily;
    manufacturerProductFamily = newManufacturerProductFamily;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY, oldManufacturerProductFamily, newManufacturerProductFamily);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setManufacturerProductFamily(MultiLanguagePropertyManufacturerProductFamily newManufacturerProductFamily)
  {
    if (newManufacturerProductFamily != manufacturerProductFamily)
    {
      NotificationChain msgs = null;
      if (manufacturerProductFamily != null)
        msgs = ((InternalEObject)manufacturerProductFamily).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY, null, msgs);
      if (newManufacturerProductFamily != null)
        msgs = ((InternalEObject)newManufacturerProductFamily).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY, null, msgs);
      msgs = basicSetManufacturerProductFamily(newManufacturerProductFamily, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY, newManufacturerProductFamily, newManufacturerProductFamily));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiLanguagePropertySerialNumber getSerialNumber()
  {
    return serialNumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSerialNumber(MultiLanguagePropertySerialNumber newSerialNumber, NotificationChain msgs)
  {
    MultiLanguagePropertySerialNumber oldSerialNumber = serialNumber;
    serialNumber = newSerialNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER, oldSerialNumber, newSerialNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSerialNumber(MultiLanguagePropertySerialNumber newSerialNumber)
  {
    if (newSerialNumber != serialNumber)
    {
      NotificationChain msgs = null;
      if (serialNumber != null)
        msgs = ((InternalEObject)serialNumber).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER, null, msgs);
      if (newSerialNumber != null)
        msgs = ((InternalEObject)newSerialNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER, null, msgs);
      msgs = basicSetSerialNumber(newSerialNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER, newSerialNumber, newSerialNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiLanguagePropertyYearOfConstruction getYearOfConstruction()
  {
    return yearOfConstruction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetYearOfConstruction(MultiLanguagePropertyYearOfConstruction newYearOfConstruction, NotificationChain msgs)
  {
    MultiLanguagePropertyYearOfConstruction oldYearOfConstruction = yearOfConstruction;
    yearOfConstruction = newYearOfConstruction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION, oldYearOfConstruction, newYearOfConstruction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYearOfConstruction(MultiLanguagePropertyYearOfConstruction newYearOfConstruction)
  {
    if (newYearOfConstruction != yearOfConstruction)
    {
      NotificationChain msgs = null;
      if (yearOfConstruction != null)
        msgs = ((InternalEObject)yearOfConstruction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION, null, msgs);
      if (newYearOfConstruction != null)
        msgs = ((InternalEObject)newYearOfConstruction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION, null, msgs);
      msgs = basicSetYearOfConstruction(newYearOfConstruction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION, newYearOfConstruction, newYearOfConstruction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionMarkings getMarkings()
  {
    return markings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMarkings(SubmodelElementCollectionMarkings newMarkings, NotificationChain msgs)
  {
    SubmodelElementCollectionMarkings oldMarkings = markings;
    markings = newMarkings;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MARKINGS, oldMarkings, newMarkings);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMarkings(SubmodelElementCollectionMarkings newMarkings)
  {
    if (newMarkings != markings)
    {
      NotificationChain msgs = null;
      if (markings != null)
        msgs = ((InternalEObject)markings).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MARKINGS, null, msgs);
      if (newMarkings != null)
        msgs = ((InternalEObject)newMarkings).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__MARKINGS, null, msgs);
      msgs = basicSetMarkings(newMarkings, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__MARKINGS, newMarkings, newMarkings));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubmodelElementCollectionAssetSpecificProperties getAssetSpecificProperties()
  {
    return assetSpecificProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAssetSpecificProperties(SubmodelElementCollectionAssetSpecificProperties newAssetSpecificProperties, NotificationChain msgs)
  {
    SubmodelElementCollectionAssetSpecificProperties oldAssetSpecificProperties = assetSpecificProperties;
    assetSpecificProperties = newAssetSpecificProperties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES, oldAssetSpecificProperties, newAssetSpecificProperties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssetSpecificProperties(SubmodelElementCollectionAssetSpecificProperties newAssetSpecificProperties)
  {
    if (newAssetSpecificProperties != assetSpecificProperties)
    {
      NotificationChain msgs = null;
      if (assetSpecificProperties != null)
        msgs = ((InternalEObject)assetSpecificProperties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES, null, msgs);
      if (newAssetSpecificProperties != null)
        msgs = ((InternalEObject)newAssetSpecificProperties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES, null, msgs);
      msgs = basicSetAssetSpecificProperties(newAssetSpecificProperties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES, newAssetSpecificProperties, newAssetSpecificProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID:
        return basicSetSemanticId(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME:
        return basicSetManufacturerName(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION:
        return basicSetManufacturerProductDesignation(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__ADDRESS:
        return basicSetAddress(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY:
        return basicSetManufacturerProductFamily(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER:
        return basicSetSerialNumber(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION:
        return basicSetYearOfConstruction(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__MARKINGS:
        return basicSetMarkings(null, msgs);
      case DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES:
        return basicSetAssetSpecificProperties(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.NAMEPLATE_SUBMODEL__NAME:
        return getName();
      case DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID:
        return getSemanticId();
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME:
        return getManufacturerName();
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION:
        return getManufacturerProductDesignation();
      case DslPackage.NAMEPLATE_SUBMODEL__ADDRESS:
        return getAddress();
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY:
        return getManufacturerProductFamily();
      case DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER:
        return getSerialNumber();
      case DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION:
        return getYearOfConstruction();
      case DslPackage.NAMEPLATE_SUBMODEL__MARKINGS:
        return getMarkings();
      case DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES:
        return getAssetSpecificProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.NAMEPLATE_SUBMODEL__NAME:
        setName((String)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID:
        setSemanticId((SID)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME:
        setManufacturerName((MultiLanguagePropertyManufacturerName)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION:
        setManufacturerProductDesignation((MultiLanguagePropertyManufacturerProductDesignation)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__ADDRESS:
        setAddress((AddressSubmodelElementCollection)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY:
        setManufacturerProductFamily((MultiLanguagePropertyManufacturerProductFamily)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER:
        setSerialNumber((MultiLanguagePropertySerialNumber)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION:
        setYearOfConstruction((MultiLanguagePropertyYearOfConstruction)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MARKINGS:
        setMarkings((SubmodelElementCollectionMarkings)newValue);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES:
        setAssetSpecificProperties((SubmodelElementCollectionAssetSpecificProperties)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.NAMEPLATE_SUBMODEL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID:
        setSemanticId((SID)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME:
        setManufacturerName((MultiLanguagePropertyManufacturerName)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION:
        setManufacturerProductDesignation((MultiLanguagePropertyManufacturerProductDesignation)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__ADDRESS:
        setAddress((AddressSubmodelElementCollection)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY:
        setManufacturerProductFamily((MultiLanguagePropertyManufacturerProductFamily)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER:
        setSerialNumber((MultiLanguagePropertySerialNumber)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION:
        setYearOfConstruction((MultiLanguagePropertyYearOfConstruction)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__MARKINGS:
        setMarkings((SubmodelElementCollectionMarkings)null);
        return;
      case DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES:
        setAssetSpecificProperties((SubmodelElementCollectionAssetSpecificProperties)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.NAMEPLATE_SUBMODEL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.NAMEPLATE_SUBMODEL__SEMANTIC_ID:
        return semanticId != null;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_NAME:
        return manufacturerName != null;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_DESIGNATION:
        return manufacturerProductDesignation != null;
      case DslPackage.NAMEPLATE_SUBMODEL__ADDRESS:
        return address != null;
      case DslPackage.NAMEPLATE_SUBMODEL__MANUFACTURER_PRODUCT_FAMILY:
        return manufacturerProductFamily != null;
      case DslPackage.NAMEPLATE_SUBMODEL__SERIAL_NUMBER:
        return serialNumber != null;
      case DslPackage.NAMEPLATE_SUBMODEL__YEAR_OF_CONSTRUCTION:
        return yearOfConstruction != null;
      case DslPackage.NAMEPLATE_SUBMODEL__MARKINGS:
        return markings != null;
      case DslPackage.NAMEPLATE_SUBMODEL__ASSET_SPECIFIC_PROPERTIES:
        return assetSpecificProperties != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //NameplateSubmodelImpl
