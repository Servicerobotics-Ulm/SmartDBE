/**
 * generated by Xtext 2.23.0
 */
package org.xtext.smartaas.nameplate.dsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.smartaas.nameplate.dsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.smartaas.nameplate.dsl.DslPackage
 * @generated
 */
public class DslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.NAMEPLATE_SUBMODEL:
      {
        NameplateSubmodel nameplateSubmodel = (NameplateSubmodel)theEObject;
        T result = caseNameplateSubmodel(nameplateSubmodel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_MANUFACTURER_NAME:
      {
        MultiLanguagePropertyManufacturerName multiLanguagePropertyManufacturerName = (MultiLanguagePropertyManufacturerName)theEObject;
        T result = caseMultiLanguagePropertyManufacturerName(multiLanguagePropertyManufacturerName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_MANUFACTURER_PRODUCT_DESIGNATION:
      {
        MultiLanguagePropertyManufacturerProductDesignation multiLanguagePropertyManufacturerProductDesignation = (MultiLanguagePropertyManufacturerProductDesignation)theEObject;
        T result = caseMultiLanguagePropertyManufacturerProductDesignation(multiLanguagePropertyManufacturerProductDesignation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_MANUFACTURER_PRODUCT_FAMILY:
      {
        MultiLanguagePropertyManufacturerProductFamily multiLanguagePropertyManufacturerProductFamily = (MultiLanguagePropertyManufacturerProductFamily)theEObject;
        T result = caseMultiLanguagePropertyManufacturerProductFamily(multiLanguagePropertyManufacturerProductFamily);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_SERIAL_NUMBER:
      {
        MultiLanguagePropertySerialNumber multiLanguagePropertySerialNumber = (MultiLanguagePropertySerialNumber)theEObject;
        T result = caseMultiLanguagePropertySerialNumber(multiLanguagePropertySerialNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_YEAR_OF_CONSTRUCTION:
      {
        MultiLanguagePropertyYearOfConstruction multiLanguagePropertyYearOfConstruction = (MultiLanguagePropertyYearOfConstruction)theEObject;
        T result = caseMultiLanguagePropertyYearOfConstruction(multiLanguagePropertyYearOfConstruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.ADDRESS_SUBMODEL_ELEMENT_COLLECTION:
      {
        AddressSubmodelElementCollection addressSubmodelElementCollection = (AddressSubmodelElementCollection)theEObject;
        T result = caseAddressSubmodelElementCollection(addressSubmodelElementCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_DEPARTMENT:
      {
        MultiLanguagePropertyDepartment multiLanguagePropertyDepartment = (MultiLanguagePropertyDepartment)theEObject;
        T result = caseMultiLanguagePropertyDepartment(multiLanguagePropertyDepartment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_STREET:
      {
        MultiLanguagePropertyStreet multiLanguagePropertyStreet = (MultiLanguagePropertyStreet)theEObject;
        T result = caseMultiLanguagePropertyStreet(multiLanguagePropertyStreet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_ZIPCODE:
      {
        MultiLanguagePropertyZipcode multiLanguagePropertyZipcode = (MultiLanguagePropertyZipcode)theEObject;
        T result = caseMultiLanguagePropertyZipcode(multiLanguagePropertyZipcode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_PO_BOX:
      {
        MultiLanguagePropertyPOBox multiLanguagePropertyPOBox = (MultiLanguagePropertyPOBox)theEObject;
        T result = caseMultiLanguagePropertyPOBox(multiLanguagePropertyPOBox);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_ZIP_CODE_OF_PO_BOX:
      {
        MultiLanguagePropertyZipCodeOfPOBox multiLanguagePropertyZipCodeOfPOBox = (MultiLanguagePropertyZipCodeOfPOBox)theEObject;
        T result = caseMultiLanguagePropertyZipCodeOfPOBox(multiLanguagePropertyZipCodeOfPOBox);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_CITY_TOWN:
      {
        MultiLanguagePropertyCityTown multiLanguagePropertyCityTown = (MultiLanguagePropertyCityTown)theEObject;
        T result = caseMultiLanguagePropertyCityTown(multiLanguagePropertyCityTown);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_STATE_COUNTY:
      {
        MultiLanguagePropertyStateCounty multiLanguagePropertyStateCounty = (MultiLanguagePropertyStateCounty)theEObject;
        T result = caseMultiLanguagePropertyStateCounty(multiLanguagePropertyStateCounty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_NATIONAL_CODE:
      {
        MultiLanguagePropertyNationalCode multiLanguagePropertyNationalCode = (MultiLanguagePropertyNationalCode)theEObject;
        T result = caseMultiLanguagePropertyNationalCode(multiLanguagePropertyNationalCode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_VAT_NUMBER:
      {
        MultiLanguagePropertyVATNumber multiLanguagePropertyVATNumber = (MultiLanguagePropertyVATNumber)theEObject;
        T result = caseMultiLanguagePropertyVATNumber(multiLanguagePropertyVATNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_ADDRESS_REMARKS:
      {
        MultiLanguagePropertyAddressRemarks multiLanguagePropertyAddressRemarks = (MultiLanguagePropertyAddressRemarks)theEObject;
        T result = caseMultiLanguagePropertyAddressRemarks(multiLanguagePropertyAddressRemarks);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_ADDRESS_OF_ADDITIONAL_LINK:
      {
        MultiLanguagePropertyAddressOfAdditionalLink multiLanguagePropertyAddressOfAdditionalLink = (MultiLanguagePropertyAddressOfAdditionalLink)theEObject;
        T result = caseMultiLanguagePropertyAddressOfAdditionalLink(multiLanguagePropertyAddressOfAdditionalLink);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PHONE_SUBMODEL_ELEMENT_COLLECTION:
      {
        PhoneSubmodelElementCollection phoneSubmodelElementCollection = (PhoneSubmodelElementCollection)theEObject;
        T result = casePhoneSubmodelElementCollection(phoneSubmodelElementCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_TELEPHONE_NUMBER:
      {
        MultiLanguagePropertyTelephoneNumber multiLanguagePropertyTelephoneNumber = (MultiLanguagePropertyTelephoneNumber)theEObject;
        T result = caseMultiLanguagePropertyTelephoneNumber(multiLanguagePropertyTelephoneNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_TYPE_OF_TELEPHONE:
      {
        PropertyTypeOfTelephone propertyTypeOfTelephone = (PropertyTypeOfTelephone)theEObject;
        T result = casePropertyTypeOfTelephone(propertyTypeOfTelephone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FAX_SUBMODEL_ELEMENT_COLLECTION:
      {
        FaxSubmodelElementCollection faxSubmodelElementCollection = (FaxSubmodelElementCollection)theEObject;
        T result = caseFaxSubmodelElementCollection(faxSubmodelElementCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_FAX:
      {
        MultiLanguagePropertyFax multiLanguagePropertyFax = (MultiLanguagePropertyFax)theEObject;
        T result = caseMultiLanguagePropertyFax(multiLanguagePropertyFax);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_TYPE_OF_FAX_NUMBER:
      {
        PropertyTypeOfFaxNumber propertyTypeOfFaxNumber = (PropertyTypeOfFaxNumber)theEObject;
        T result = casePropertyTypeOfFaxNumber(propertyTypeOfFaxNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.EMAIL_SUBMODEL_ELEMENT_COLLECTION:
      {
        EmailSubmodelElementCollection emailSubmodelElementCollection = (EmailSubmodelElementCollection)theEObject;
        T result = caseEmailSubmodelElementCollection(emailSubmodelElementCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_EMAIL_ADDRESS:
      {
        PropertyEmailAddress propertyEmailAddress = (PropertyEmailAddress)theEObject;
        T result = casePropertyEmailAddress(propertyEmailAddress);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_TYPE_OF_EMAIL_ADDRESS:
      {
        PropertyTypeOfEmailAddress propertyTypeOfEmailAddress = (PropertyTypeOfEmailAddress)theEObject;
        T result = casePropertyTypeOfEmailAddress(propertyTypeOfEmailAddress);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_PUBLIC_KEY:
      {
        MultiLanguagePropertyPublicKey multiLanguagePropertyPublicKey = (MultiLanguagePropertyPublicKey)theEObject;
        T result = caseMultiLanguagePropertyPublicKey(multiLanguagePropertyPublicKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.MULTI_LANGUAGE_PROPERTY_TYPE_OF_PUBLICK_KEY:
      {
        MultiLanguagePropertyTypeOfPublickKey multiLanguagePropertyTypeOfPublickKey = (MultiLanguagePropertyTypeOfPublickKey)theEObject;
        T result = caseMultiLanguagePropertyTypeOfPublickKey(multiLanguagePropertyTypeOfPublickKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SUBMODEL_ELEMENT_COLLECTION_MARKINGS:
      {
        SubmodelElementCollectionMarkings submodelElementCollectionMarkings = (SubmodelElementCollectionMarkings)theEObject;
        T result = caseSubmodelElementCollectionMarkings(submodelElementCollectionMarkings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SUBMODEL_ELEMENT_COLLECTION_MARKING:
      {
        SubmodelElementCollectionMarking submodelElementCollectionMarking = (SubmodelElementCollectionMarking)theEObject;
        T result = caseSubmodelElementCollectionMarking(submodelElementCollectionMarking);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_MARKING_NAME:
      {
        PropertyMarkingName propertyMarkingName = (PropertyMarkingName)theEObject;
        T result = casePropertyMarkingName(propertyMarkingName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.FILE_MARKING_FILE:
      {
        FileMarkingFile fileMarkingFile = (FileMarkingFile)theEObject;
        T result = caseFileMarkingFile(fileMarkingFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_MARKING_ADDITIONAL_TEXT:
      {
        PropertyMarkingAdditionalText propertyMarkingAdditionalText = (PropertyMarkingAdditionalText)theEObject;
        T result = casePropertyMarkingAdditionalText(propertyMarkingAdditionalText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SUBMODEL_ELEMENT_COLLECTION_ASSET_SPECIFIC_PROPERTIES:
      {
        SubmodelElementCollectionAssetSpecificProperties submodelElementCollectionAssetSpecificProperties = (SubmodelElementCollectionAssetSpecificProperties)theEObject;
        T result = caseSubmodelElementCollectionAssetSpecificProperties(submodelElementCollectionAssetSpecificProperties);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SUBMODEL_ELEMENT_COLLECTION_GUIDELINE_SPECIFIC_PROPERTIES:
      {
        SubmodelElementCollectionGuidelineSpecificProperties submodelElementCollectionGuidelineSpecificProperties = (SubmodelElementCollectionGuidelineSpecificProperties)theEObject;
        T result = caseSubmodelElementCollectionGuidelineSpecificProperties(submodelElementCollectionGuidelineSpecificProperties);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_GUIDELINE_FOR_CONFORMITY_DECLARATION:
      {
        PropertyGuidelineForConformityDeclaration propertyGuidelineForConformityDeclaration = (PropertyGuidelineForConformityDeclaration)theEObject;
        T result = casePropertyGuidelineForConformityDeclaration(propertyGuidelineForConformityDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.PROPERTY_ARBITRARY:
      {
        PropertyArbitrary propertyArbitrary = (PropertyArbitrary)theEObject;
        T result = casePropertyArbitrary(propertyArbitrary);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DslPackage.SID:
      {
        SID sid = (SID)theEObject;
        T result = caseSID(sid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Nameplate Submodel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Nameplate Submodel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNameplateSubmodel(NameplateSubmodel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyManufacturerName(MultiLanguagePropertyManufacturerName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Product Designation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Product Designation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyManufacturerProductDesignation(MultiLanguagePropertyManufacturerProductDesignation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Product Family</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Manufacturer Product Family</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyManufacturerProductFamily(MultiLanguagePropertyManufacturerProductFamily object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Serial Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Serial Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertySerialNumber(MultiLanguagePropertySerialNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Year Of Construction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Year Of Construction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyYearOfConstruction(MultiLanguagePropertyYearOfConstruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Address Submodel Element Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Address Submodel Element Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddressSubmodelElementCollection(AddressSubmodelElementCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Department</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Department</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyDepartment(MultiLanguagePropertyDepartment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Street</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Street</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyStreet(MultiLanguagePropertyStreet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Zipcode</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Zipcode</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyZipcode(MultiLanguagePropertyZipcode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property PO Box</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property PO Box</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyPOBox(MultiLanguagePropertyPOBox object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Zip Code Of PO Box</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Zip Code Of PO Box</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyZipCodeOfPOBox(MultiLanguagePropertyZipCodeOfPOBox object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property City Town</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property City Town</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyCityTown(MultiLanguagePropertyCityTown object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property State County</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property State County</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyStateCounty(MultiLanguagePropertyStateCounty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property National Code</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property National Code</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyNationalCode(MultiLanguagePropertyNationalCode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property VAT Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property VAT Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyVATNumber(MultiLanguagePropertyVATNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Address Remarks</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Address Remarks</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyAddressRemarks(MultiLanguagePropertyAddressRemarks object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Address Of Additional Link</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Address Of Additional Link</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyAddressOfAdditionalLink(MultiLanguagePropertyAddressOfAdditionalLink object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Phone Submodel Element Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Phone Submodel Element Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePhoneSubmodelElementCollection(PhoneSubmodelElementCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Telephone Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Telephone Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyTelephoneNumber(MultiLanguagePropertyTelephoneNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Type Of Telephone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Type Of Telephone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyTypeOfTelephone(PropertyTypeOfTelephone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fax Submodel Element Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fax Submodel Element Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFaxSubmodelElementCollection(FaxSubmodelElementCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Fax</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Fax</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyFax(MultiLanguagePropertyFax object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Type Of Fax Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Type Of Fax Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyTypeOfFaxNumber(PropertyTypeOfFaxNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Email Submodel Element Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Email Submodel Element Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEmailSubmodelElementCollection(EmailSubmodelElementCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Email Address</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Email Address</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyEmailAddress(PropertyEmailAddress object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Type Of Email Address</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Type Of Email Address</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyTypeOfEmailAddress(PropertyTypeOfEmailAddress object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Public Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Public Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyPublicKey(MultiLanguagePropertyPublicKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multi Language Property Type Of Publick Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multi Language Property Type Of Publick Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiLanguagePropertyTypeOfPublickKey(MultiLanguagePropertyTypeOfPublickKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Submodel Element Collection Markings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Submodel Element Collection Markings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubmodelElementCollectionMarkings(SubmodelElementCollectionMarkings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Submodel Element Collection Marking</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Submodel Element Collection Marking</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubmodelElementCollectionMarking(SubmodelElementCollectionMarking object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Marking Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Marking Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyMarkingName(PropertyMarkingName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File Marking File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File Marking File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFileMarkingFile(FileMarkingFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Marking Additional Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Marking Additional Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyMarkingAdditionalText(PropertyMarkingAdditionalText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Submodel Element Collection Asset Specific Properties</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Submodel Element Collection Asset Specific Properties</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubmodelElementCollectionAssetSpecificProperties(SubmodelElementCollectionAssetSpecificProperties object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Submodel Element Collection Guideline Specific Properties</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Submodel Element Collection Guideline Specific Properties</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubmodelElementCollectionGuidelineSpecificProperties(SubmodelElementCollectionGuidelineSpecificProperties object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Guideline For Conformity Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Guideline For Conformity Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyGuidelineForConformityDeclaration(PropertyGuidelineForConformityDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Arbitrary</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Arbitrary</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyArbitrary(PropertyArbitrary object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSID(SID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DslSwitch
