/*
 * generated by Xtext 2.23.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.smartaas.sms.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.smartaas.sms.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.smartaas.sms.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSMSINType
entryRuleSMSINType
:
{ before(grammarAccess.getSMSINTypeRule()); }
	 ruleSMSINType
{ after(grammarAccess.getSMSINTypeRule()); } 
	 EOF 
;

// Rule SMSINType
ruleSMSINType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSMSINTypeAccess().getGroup()); }
		(rule__SMSINType__Group__0)
		{ after(grammarAccess.getSMSINTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSMSINTypeCommand
entryRuleSMSINTypeCommand
:
{ before(grammarAccess.getSMSINTypeCommandRule()); }
	 ruleSMSINTypeCommand
{ after(grammarAccess.getSMSINTypeCommandRule()); } 
	 EOF 
;

// Rule SMSINTypeCommand
ruleSMSINTypeCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSMSINTypeCommandAccess().getGroup()); }
		(rule__SMSINTypeCommand__Group__0)
		{ after(grammarAccess.getSMSINTypeCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleany
entryRuleany
:
{ before(grammarAccess.getAnyRule()); }
	 ruleany
{ after(grammarAccess.getAnyRule()); } 
	 EOF 
;

// Rule any
ruleany 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyAccess().getNameAssignment()); }
		(rule__Any__NameAssignment)
		{ after(grammarAccess.getAnyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulea1
entryRulea1
:
{ before(grammarAccess.getA1Rule()); }
	 rulea1
{ after(grammarAccess.getA1Rule()); } 
	 EOF 
;

// Rule a1
rulea1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getA1Access().getGroup()); }
		(rule__A1__Group__0)
		{ after(grammarAccess.getA1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulea2
entryRulea2
:
{ before(grammarAccess.getA2Rule()); }
	 rulea2
{ after(grammarAccess.getA2Rule()); } 
	 EOF 
;

// Rule a2
rulea2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getA2Access().getGroup()); }
		(rule__A2__Group__0)
		{ after(grammarAccess.getA2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulea3
entryRulea3
:
{ before(grammarAccess.getA3Rule()); }
	 rulea3
{ after(grammarAccess.getA3Rule()); } 
	 EOF 
;

// Rule a3
rulea3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getA3Access().getGroup()); }
		(rule__A3__Group__0)
		{ after(grammarAccess.getA3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulea4
entryRulea4
:
{ before(grammarAccess.getA4Rule()); }
	 rulea4
{ after(grammarAccess.getA4Rule()); } 
	 EOF 
;

// Rule a4
rulea4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getA4Access().getGroup()); }
		(rule__A4__Group__0)
		{ after(grammarAccess.getA4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulea5
entryRulea5
:
{ before(grammarAccess.getA5Rule()); }
	 rulea5
{ after(grammarAccess.getA5Rule()); } 
	 EOF 
;

// Rule a5
rulea5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getA5Access().getGroup()); }
		(rule__A5__Group__0)
		{ after(grammarAccess.getA5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb1
entryRuleb1
:
{ before(grammarAccess.getB1Rule()); }
	 ruleb1
{ after(grammarAccess.getB1Rule()); } 
	 EOF 
;

// Rule b1
ruleb1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB1Access().getGroup()); }
		(rule__B1__Group__0)
		{ after(grammarAccess.getB1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb2
entryRuleb2
:
{ before(grammarAccess.getB2Rule()); }
	 ruleb2
{ after(grammarAccess.getB2Rule()); } 
	 EOF 
;

// Rule b2
ruleb2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB2Access().getGroup()); }
		(rule__B2__Group__0)
		{ after(grammarAccess.getB2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb3
entryRuleb3
:
{ before(grammarAccess.getB3Rule()); }
	 ruleb3
{ after(grammarAccess.getB3Rule()); } 
	 EOF 
;

// Rule b3
ruleb3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB3Access().getGroup()); }
		(rule__B3__Group__0)
		{ after(grammarAccess.getB3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb4
entryRuleb4
:
{ before(grammarAccess.getB4Rule()); }
	 ruleb4
{ after(grammarAccess.getB4Rule()); } 
	 EOF 
;

// Rule b4
ruleb4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB4Access().getGroup()); }
		(rule__B4__Group__0)
		{ after(grammarAccess.getB4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb5
entryRuleb5
:
{ before(grammarAccess.getB5Rule()); }
	 ruleb5
{ after(grammarAccess.getB5Rule()); } 
	 EOF 
;

// Rule b5
ruleb5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getB5Access().getGroup()); }
		(rule__B5__Group__0)
		{ after(grammarAccess.getB5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Any__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyAccess().getNameA1ParserRuleCall_0_0()); }
		rulea1
		{ after(grammarAccess.getAnyAccess().getNameA1ParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameA2ParserRuleCall_0_1()); }
		rulea2
		{ after(grammarAccess.getAnyAccess().getNameA2ParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameA3ParserRuleCall_0_2()); }
		rulea3
		{ after(grammarAccess.getAnyAccess().getNameA3ParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameA4ParserRuleCall_0_3()); }
		rulea4
		{ after(grammarAccess.getAnyAccess().getNameA4ParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameA5ParserRuleCall_0_4()); }
		rulea5
		{ after(grammarAccess.getAnyAccess().getNameA5ParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameB1ParserRuleCall_0_5()); }
		ruleb1
		{ after(grammarAccess.getAnyAccess().getNameB1ParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameB2ParserRuleCall_0_6()); }
		ruleb2
		{ after(grammarAccess.getAnyAccess().getNameB2ParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameB3ParserRuleCall_0_7()); }
		ruleb3
		{ after(grammarAccess.getAnyAccess().getNameB3ParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameB4ParserRuleCall_0_8()); }
		ruleb4
		{ after(grammarAccess.getAnyAccess().getNameB4ParserRuleCall_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getAnyAccess().getNameB5ParserRuleCall_0_9()); }
		ruleb5
		{ after(grammarAccess.getAnyAccess().getNameB5ParserRuleCall_0_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSMSINAssignment_0()); }
	(rule__Model__SMSINAssignment_0)
	{ after(grammarAccess.getModelAccess().getSMSINAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSMSINCommandAssignment_1()); }
	(rule__Model__SMSINCommandAssignment_1)?
	{ after(grammarAccess.getModelAccess().getSMSINCommandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SMSINType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__0__Impl
	rule__SMSINType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getAASKeyword_0()); }
	'AAS'
	{ after(grammarAccess.getSMSINTypeAccess().getAASKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__1__Impl
	rule__SMSINType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getSMSINTypeAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__2__Impl
	rule__SMSINType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getSMSKeyword_2()); }
	'SMS'
	{ after(grammarAccess.getSMSINTypeAccess().getSMSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__3__Impl
	rule__SMSINType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getNameAssignment_3()); }
	(rule__SMSINType__NameAssignment_3)
	{ after(grammarAccess.getSMSINTypeAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__4__Impl
	rule__SMSINType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getAASEntriesLOG_STARTKeyword_4()); }
	'[[AASEntriesLOG_START[['
	{ after(grammarAccess.getSMSINTypeAccess().getAASEntriesLOG_STARTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__5__Impl
	rule__SMSINType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getGroup_5()); }
	(rule__SMSINType__Group_5__0)*
	{ after(grammarAccess.getSMSINTypeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getAASEntriesLOG_FINISHKeyword_6()); }
	']]AASEntriesLOG_FINISH]]'
	{ after(grammarAccess.getSMSINTypeAccess().getAASEntriesLOG_FINISHKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SMSINType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group_5__0__Impl
	rule__SMSINType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getAnyAssignment_5_0()); }
	(rule__SMSINType__AnyAssignment_5_0)*
	{ after(grammarAccess.getSMSINTypeAccess().getAnyAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeAccess().getSemicolonKeyword_5_1()); }
	';'
	{ after(grammarAccess.getSMSINTypeAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SMSINTypeCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__0__Impl
	rule__SMSINTypeCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getAASKeyword_0()); }
	'AAS'
	{ after(grammarAccess.getSMSINTypeCommandAccess().getAASKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__1__Impl
	rule__SMSINTypeCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getSMSINTypeCommandAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__2__Impl
	rule__SMSINTypeCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getSMSKeyword_2()); }
	'SMS'
	{ after(grammarAccess.getSMSINTypeCommandAccess().getSMSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__3__Impl
	rule__SMSINTypeCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getNameAssignment_3()); }
	(rule__SMSINTypeCommand__NameAssignment_3)
	{ after(grammarAccess.getSMSINTypeCommandAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__4__Impl
	rule__SMSINTypeCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getAASEntriesLOG_Command_STARTKeyword_4()); }
	'[[AASEntriesLOG_Command_START[['
	{ after(grammarAccess.getSMSINTypeCommandAccess().getAASEntriesLOG_Command_STARTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__5__Impl
	rule__SMSINTypeCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getGroup_5()); }
	(rule__SMSINTypeCommand__Group_5__0)*
	{ after(grammarAccess.getSMSINTypeCommandAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getAASEntriesLOG_Command_FINISHKeyword_6()); }
	']]AASEntriesLOG_Command_FINISH]]'
	{ after(grammarAccess.getSMSINTypeCommandAccess().getAASEntriesLOG_Command_FINISHKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SMSINTypeCommand__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group_5__0__Impl
	rule__SMSINTypeCommand__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getAnyAssignment_5_0()); }
	(rule__SMSINTypeCommand__AnyAssignment_5_0)*
	{ after(grammarAccess.getSMSINTypeCommandAccess().getAnyAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SMSINTypeCommand__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSMSINTypeCommandAccess().getSemicolonKeyword_5_1()); }
	';'
	{ after(grammarAccess.getSMSINTypeCommandAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__A1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A1__Group__0__Impl
	rule__A1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__A1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA1Access().getDaggerKeyword_0()); }
	'\u2020'
	{ after(grammarAccess.getA1Access().getDaggerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__A1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__A1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA1Access().getNameAssignment_1()); }
	(rule__A1__NameAssignment_1)
	{ after(grammarAccess.getA1Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__A2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A2__Group__0__Impl
	rule__A2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__A2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA2Access().getMasculineOrdinalIndicatorKeyword_0()); }
	'\u00BA'
	{ after(grammarAccess.getA2Access().getMasculineOrdinalIndicatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__A2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__A2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA2Access().getNameAssignment_1()); }
	(rule__A2__NameAssignment_1)
	{ after(grammarAccess.getA2Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__A3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A3__Group__0__Impl
	rule__A3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__A3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA3Access().getCurrencySignKeyword_0()); }
	'\u00A4'
	{ after(grammarAccess.getA3Access().getCurrencySignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__A3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__A3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA3Access().getNameAssignment_1()); }
	(rule__A3__NameAssignment_1)
	{ after(grammarAccess.getA3Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__A4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A4__Group__0__Impl
	rule__A4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__A4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA4Access().getSectionSignKeyword_0()); }
	'\u00A7'
	{ after(grammarAccess.getA4Access().getSectionSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__A4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__A4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA4Access().getNameAssignment_1()); }
	(rule__A4__NameAssignment_1)
	{ after(grammarAccess.getA4Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__A5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A5__Group__0__Impl
	rule__A5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__A5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA5Access().getGreekCapitalLetterHetaKeyword_0()); }
	'\u0370'
	{ after(grammarAccess.getA5Access().getGreekCapitalLetterHetaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__A5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__A5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__A5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getA5Access().getNameAssignment_1()); }
	(rule__A5__NameAssignment_1)
	{ after(grammarAccess.getA5Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B1__Group__0__Impl
	rule__B1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB1Access().getVerticalLineExclamationMarkVerticalLineKeyword_0()); }
	'|!|'
	{ after(grammarAccess.getB1Access().getVerticalLineExclamationMarkVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB1Access().getNameAssignment_1()); }
	(rule__B1__NameAssignment_1)
	{ after(grammarAccess.getB1Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B2__Group__0__Impl
	rule__B2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB2Access().getVerticalLineFullStopVerticalLineKeyword_0()); }
	'|.|'
	{ after(grammarAccess.getB2Access().getVerticalLineFullStopVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB2Access().getNameAssignment_1()); }
	(rule__B2__NameAssignment_1)
	{ after(grammarAccess.getB2Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B3__Group__0__Impl
	rule__B3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB3Access().getVerticalLineAsteriskVerticalLineKeyword_0()); }
	'|*|'
	{ after(grammarAccess.getB3Access().getVerticalLineAsteriskVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB3Access().getNameAssignment_1()); }
	(rule__B3__NameAssignment_1)
	{ after(grammarAccess.getB3Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B4__Group__0__Impl
	rule__B4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB4Access().get_Keyword_0()); }
	'|_|'
	{ after(grammarAccess.getB4Access().get_Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB4Access().getNameAssignment_1()); }
	(rule__B4__NameAssignment_1)
	{ after(grammarAccess.getB4Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__B5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B5__Group__0__Impl
	rule__B5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__B5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB5Access().getENTRYKeyword_0()); }
	'|+ENTRY|'
	{ after(grammarAccess.getB5Access().getENTRYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__B5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__B5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__B5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getB5Access().getNameAssignment_1()); }
	(rule__B5__NameAssignment_1)
	{ after(grammarAccess.getB5Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SMSINAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSMSINSMSINTypeParserRuleCall_0_0()); }
		ruleSMSINType
		{ after(grammarAccess.getModelAccess().getSMSINSMSINTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SMSINCommandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSMSINCommandSMSINTypeCommandParserRuleCall_1_0()); }
		ruleSMSINTypeCommand
		{ after(grammarAccess.getModelAccess().getSMSINCommandSMSINTypeCommandParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSMSINTypeAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSMSINTypeAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINType__AnyAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSMSINTypeAccess().getAnyAnyParserRuleCall_5_0_0()); }
		ruleany
		{ after(grammarAccess.getSMSINTypeAccess().getAnyAnyParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSMSINTypeCommandAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSMSINTypeCommandAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SMSINTypeCommand__AnyAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSMSINTypeCommandAccess().getAnyAnyParserRuleCall_5_0_0()); }
		ruleany
		{ after(grammarAccess.getSMSINTypeCommandAccess().getAnyAnyParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Any__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyAccess().getNameAlternatives_0()); }
		(rule__Any__NameAlternatives_0)
		{ after(grammarAccess.getAnyAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__A1__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getA1Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getA1Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__A2__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getA2Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getA2Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__A3__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getA3Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getA3Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__A4__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getA4Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getA4Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__A5__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getA5Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getA5Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B1__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB1Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getB1Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B2__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB2Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getB2Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B3__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB3Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getB3Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B4__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB4Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getB4Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B5__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getB5Access().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getB5Access().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
