/*
 * generated by Xtext 2.23.0
 */
package org.xtext.smartaas.sms.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSMSINAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSMSINSMSINTypeParserRuleCall_0_0 = (RuleCall)cSMSINAssignment_0.eContents().get(0);
		private final Assignment cSMSINCommandAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSMSINCommandSMSINTypeCommandParserRuleCall_1_0 = (RuleCall)cSMSINCommandAssignment_1.eContents().get(0);
		
		//Model:
		//	SMSIN=SMSINType
		//	SMSINCommand=SMSINTypeCommand?
		//	//#TODO Obsolete//	(SMSINNameplate=SMSINTypeNameplate)?
		//	//#TODO Obsolete//	(SMSINTechnicalData=SMSINTypeTechnicalData)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SMSIN=SMSINType SMSINCommand=SMSINTypeCommand?
		public Group getGroup() { return cGroup; }
		
		//SMSIN=SMSINType
		public Assignment getSMSINAssignment_0() { return cSMSINAssignment_0; }
		
		//SMSINType
		public RuleCall getSMSINSMSINTypeParserRuleCall_0_0() { return cSMSINSMSINTypeParserRuleCall_0_0; }
		
		//SMSINCommand=SMSINTypeCommand?
		public Assignment getSMSINCommandAssignment_1() { return cSMSINCommandAssignment_1; }
		
		//SMSINTypeCommand
		public RuleCall getSMSINCommandSMSINTypeCommandParserRuleCall_1_0() { return cSMSINCommandSMSINTypeCommandParserRuleCall_1_0; }
	}
	public class SMSINTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.SMSINType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAASKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSMSKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cAASEntriesLOG_STARTKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAnyAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAnyAnyParserRuleCall_5_0_0 = (RuleCall)cAnyAssignment_5_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cAASEntriesLOG_FINISHKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		////	cardinalities:
		////	exactly one (the default, no operator)
		////	zero or one (operator ?)
		////	zero or more (operator *)
		////	one or more (operator +)
		//SMSINType:
		//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_START[[' (any+=any* ';')*
		//	']]AASEntriesLOG_FINISH]]';
		@Override public ParserRule getRule() { return rule; }
		
		//'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_START[[' (any+=any* ';')* ']]AASEntriesLOG_FINISH]]'
		public Group getGroup() { return cGroup; }
		
		//'AAS'
		public Keyword getAASKeyword_0() { return cAASKeyword_0; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//'SMS'
		public Keyword getSMSKeyword_2() { return cSMSKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//'[[AASEntriesLOG_START[['
		public Keyword getAASEntriesLOG_STARTKeyword_4() { return cAASEntriesLOG_STARTKeyword_4; }
		
		//(any+=any* ';')*
		public Group getGroup_5() { return cGroup_5; }
		
		//any+=any*
		public Assignment getAnyAssignment_5_0() { return cAnyAssignment_5_0; }
		
		//any
		public RuleCall getAnyAnyParserRuleCall_5_0_0() { return cAnyAnyParserRuleCall_5_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//']]AASEntriesLOG_FINISH]]'
		public Keyword getAASEntriesLOG_FINISHKeyword_6() { return cAASEntriesLOG_FINISHKeyword_6; }
	}
	public class SMSINTypeCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.SMSINTypeCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAASKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSMSKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cAASEntriesLOG_Command_STARTKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAnyAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAnyAnyParserRuleCall_5_0_0 = (RuleCall)cAnyAssignment_5_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cAASEntriesLOG_Command_FINISHKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SMSINTypeCommand:
		//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Command_START[[' (any+=any* ';')*
		//	']]AASEntriesLOG_Command_FINISH]]';
		@Override public ParserRule getRule() { return rule; }
		
		//'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Command_START[[' (any+=any* ';')* ']]AASEntriesLOG_Command_FINISH]]'
		public Group getGroup() { return cGroup; }
		
		//'AAS'
		public Keyword getAASKeyword_0() { return cAASKeyword_0; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//'SMS'
		public Keyword getSMSKeyword_2() { return cSMSKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//'[[AASEntriesLOG_Command_START[['
		public Keyword getAASEntriesLOG_Command_STARTKeyword_4() { return cAASEntriesLOG_Command_STARTKeyword_4; }
		
		//(any+=any* ';')*
		public Group getGroup_5() { return cGroup_5; }
		
		//any+=any*
		public Assignment getAnyAssignment_5_0() { return cAnyAssignment_5_0; }
		
		//any
		public RuleCall getAnyAnyParserRuleCall_5_0_0() { return cAnyAnyParserRuleCall_5_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//']]AASEntriesLOG_Command_FINISH]]'
		public Keyword getAASEntriesLOG_Command_FINISHKeyword_6() { return cAASEntriesLOG_Command_FINISHKeyword_6; }
	}
	public class SMSINTypeNameplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.SMSINTypeNameplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAASKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSMSKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cAASEntriesLOG_Nameplate_STARTKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAnyAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAnyAnyParserRuleCall_5_0_0 = (RuleCall)cAnyAssignment_5_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cAASEntriesLOG_Nameplate_FINISHKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SMSINTypeNameplate:
		//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Nameplate_START[[' (any+=any* ';')*
		//	']]AASEntriesLOG_Nameplate_FINISH]]';
		@Override public ParserRule getRule() { return rule; }
		
		//'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Nameplate_START[[' (any+=any* ';')* ']]AASEntriesLOG_Nameplate_FINISH]]'
		public Group getGroup() { return cGroup; }
		
		//'AAS'
		public Keyword getAASKeyword_0() { return cAASKeyword_0; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//'SMS'
		public Keyword getSMSKeyword_2() { return cSMSKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//'[[AASEntriesLOG_Nameplate_START[['
		public Keyword getAASEntriesLOG_Nameplate_STARTKeyword_4() { return cAASEntriesLOG_Nameplate_STARTKeyword_4; }
		
		//(any+=any* ';')*
		public Group getGroup_5() { return cGroup_5; }
		
		//any+=any*
		public Assignment getAnyAssignment_5_0() { return cAnyAssignment_5_0; }
		
		//any
		public RuleCall getAnyAnyParserRuleCall_5_0_0() { return cAnyAnyParserRuleCall_5_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//']]AASEntriesLOG_Nameplate_FINISH]]'
		public Keyword getAASEntriesLOG_Nameplate_FINISHKeyword_6() { return cAASEntriesLOG_Nameplate_FINISHKeyword_6; }
	}
	public class SMSINTypeTechnicalDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.SMSINTypeTechnicalData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAASKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSMSKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cAASEntriesLOG_TechnicalData_STARTKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAnyAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAnyAnyParserRuleCall_5_0_0 = (RuleCall)cAnyAssignment_5_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cAASEntriesLOG_TechnicalData_FINISHKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SMSINTypeTechnicalData:
		//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_TechnicalData_START[[' (any+=any* ';')*
		//	']]AASEntriesLOG_TechnicalData_FINISH]]';
		@Override public ParserRule getRule() { return rule; }
		
		//'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_TechnicalData_START[[' (any+=any* ';')*
		//']]AASEntriesLOG_TechnicalData_FINISH]]'
		public Group getGroup() { return cGroup; }
		
		//'AAS'
		public Keyword getAASKeyword_0() { return cAASKeyword_0; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//'SMS'
		public Keyword getSMSKeyword_2() { return cSMSKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//'[[AASEntriesLOG_TechnicalData_START[['
		public Keyword getAASEntriesLOG_TechnicalData_STARTKeyword_4() { return cAASEntriesLOG_TechnicalData_STARTKeyword_4; }
		
		//(any+=any* ';')*
		public Group getGroup_5() { return cGroup_5; }
		
		//any+=any*
		public Assignment getAnyAssignment_5_0() { return cAnyAssignment_5_0; }
		
		//any
		public RuleCall getAnyAnyParserRuleCall_5_0_0() { return cAnyAnyParserRuleCall_5_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//']]AASEntriesLOG_TechnicalData_FINISH]]'
		public Keyword getAASEntriesLOG_TechnicalData_FINISHKeyword_6() { return cAASEntriesLOG_TechnicalData_FINISHKeyword_6; }
	}
	public class AnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.any");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cNameAlternatives_0 = (Alternatives)cNameAssignment.eContents().get(0);
		private final RuleCall cNameA1ParserRuleCall_0_0 = (RuleCall)cNameAlternatives_0.eContents().get(0);
		private final RuleCall cNameA2ParserRuleCall_0_1 = (RuleCall)cNameAlternatives_0.eContents().get(1);
		private final RuleCall cNameA3ParserRuleCall_0_2 = (RuleCall)cNameAlternatives_0.eContents().get(2);
		private final RuleCall cNameA4ParserRuleCall_0_3 = (RuleCall)cNameAlternatives_0.eContents().get(3);
		private final RuleCall cNameA5ParserRuleCall_0_4 = (RuleCall)cNameAlternatives_0.eContents().get(4);
		private final RuleCall cNameB1ParserRuleCall_0_5 = (RuleCall)cNameAlternatives_0.eContents().get(5);
		private final RuleCall cNameB2ParserRuleCall_0_6 = (RuleCall)cNameAlternatives_0.eContents().get(6);
		private final RuleCall cNameB3ParserRuleCall_0_7 = (RuleCall)cNameAlternatives_0.eContents().get(7);
		private final RuleCall cNameB4ParserRuleCall_0_8 = (RuleCall)cNameAlternatives_0.eContents().get(8);
		private final RuleCall cNameB5ParserRuleCall_0_9 = (RuleCall)cNameAlternatives_0.eContents().get(9);
		
		//any:
		//	name=(a1 | a2 | a3 | a4 | a5 | b1 | b2 | b3 | b4 | b5);
		@Override public ParserRule getRule() { return rule; }
		
		//name=(a1 | a2 | a3 | a4 | a5 | b1 | b2 | b3 | b4 | b5)
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//(a1 | a2 | a3 | a4 | a5 | b1 | b2 | b3 | b4 | b5)
		public Alternatives getNameAlternatives_0() { return cNameAlternatives_0; }
		
		//a1
		public RuleCall getNameA1ParserRuleCall_0_0() { return cNameA1ParserRuleCall_0_0; }
		
		//a2
		public RuleCall getNameA2ParserRuleCall_0_1() { return cNameA2ParserRuleCall_0_1; }
		
		//a3
		public RuleCall getNameA3ParserRuleCall_0_2() { return cNameA3ParserRuleCall_0_2; }
		
		//a4
		public RuleCall getNameA4ParserRuleCall_0_3() { return cNameA4ParserRuleCall_0_3; }
		
		//a5
		public RuleCall getNameA5ParserRuleCall_0_4() { return cNameA5ParserRuleCall_0_4; }
		
		//b1
		public RuleCall getNameB1ParserRuleCall_0_5() { return cNameB1ParserRuleCall_0_5; }
		
		//b2
		public RuleCall getNameB2ParserRuleCall_0_6() { return cNameB2ParserRuleCall_0_6; }
		
		//b3
		public RuleCall getNameB3ParserRuleCall_0_7() { return cNameB3ParserRuleCall_0_7; }
		
		//b4
		public RuleCall getNameB4ParserRuleCall_0_8() { return cNameB4ParserRuleCall_0_8; }
		
		//b5
		public RuleCall getNameB5ParserRuleCall_0_9() { return cNameB5ParserRuleCall_0_9; }
	}
	public class A1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.a1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDaggerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//a1:
		//	'†' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'†' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'†'
		public Keyword getDaggerKeyword_0() { return cDaggerKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class A2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.a2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMasculineOrdinalIndicatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//a2:
		//	'º' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'º' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'º'
		public Keyword getMasculineOrdinalIndicatorKeyword_0() { return cMasculineOrdinalIndicatorKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class A3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.a3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCurrencySignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//a3:
		//	'¤' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'¤' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'¤'
		public Keyword getCurrencySignKeyword_0() { return cCurrencySignKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class A4Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.a4");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//a4:
		//	'§' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'§' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'§'
		public Keyword getSectionSignKeyword_0() { return cSectionSignKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class A5Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.a5");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreekCapitalLetterHetaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//a5:
		//	'Ͱ' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Ͱ' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'Ͱ'
		public Keyword getGreekCapitalLetterHetaKeyword_0() { return cGreekCapitalLetterHetaKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class B1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.b1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineExclamationMarkVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//b1:
		//	'|!|' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'|!|' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'|!|'
		public Keyword getVerticalLineExclamationMarkVerticalLineKeyword_0() { return cVerticalLineExclamationMarkVerticalLineKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class B2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.b2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineFullStopVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//b2:
		//	'|.|' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'|.|' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'|.|'
		public Keyword getVerticalLineFullStopVerticalLineKeyword_0() { return cVerticalLineFullStopVerticalLineKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class B3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.b3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineAsteriskVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//b3:
		//	'|*|' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'|*|' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'|*|'
		public Keyword getVerticalLineAsteriskVerticalLineKeyword_0() { return cVerticalLineAsteriskVerticalLineKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class B4Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.b4");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c_Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//b4:
		//	'|_|' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'|_|' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'|_|'
		public Keyword get_Keyword_0() { return c_Keyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class B5Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.smartaas.sms.Dsl.b5");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cENTRYKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//b5:
		//	'|+ENTRY|' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'|+ENTRY|' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'|+ENTRY|'
		public Keyword getENTRYKeyword_0() { return cENTRYKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final SMSINTypeElements pSMSINType;
	private final SMSINTypeCommandElements pSMSINTypeCommand;
	private final SMSINTypeNameplateElements pSMSINTypeNameplate;
	private final SMSINTypeTechnicalDataElements pSMSINTypeTechnicalData;
	private final AnyElements pAny;
	private final A1Elements pA1;
	private final A2Elements pA2;
	private final A3Elements pA3;
	private final A4Elements pA4;
	private final A5Elements pA5;
	private final B1Elements pB1;
	private final B2Elements pB2;
	private final B3Elements pB3;
	private final B4Elements pB4;
	private final B5Elements pB5;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pSMSINType = new SMSINTypeElements();
		this.pSMSINTypeCommand = new SMSINTypeCommandElements();
		this.pSMSINTypeNameplate = new SMSINTypeNameplateElements();
		this.pSMSINTypeTechnicalData = new SMSINTypeTechnicalDataElements();
		this.pAny = new AnyElements();
		this.pA1 = new A1Elements();
		this.pA2 = new A2Elements();
		this.pA3 = new A3Elements();
		this.pA4 = new A4Elements();
		this.pA5 = new A5Elements();
		this.pB1 = new B1Elements();
		this.pB2 = new B2Elements();
		this.pB3 = new B3Elements();
		this.pB4 = new B4Elements();
		this.pB5 = new B5Elements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.smartaas.sms.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	SMSIN=SMSINType
	//	SMSINCommand=SMSINTypeCommand?
	//	//#TODO Obsolete//	(SMSINNameplate=SMSINTypeNameplate)?
	//	//#TODO Obsolete//	(SMSINTechnicalData=SMSINTypeTechnicalData)?
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	////	cardinalities:
	////	exactly one (the default, no operator)
	////	zero or one (operator ?)
	////	zero or more (operator *)
	////	one or more (operator +)
	//SMSINType:
	//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_START[[' (any+=any* ';')*
	//	']]AASEntriesLOG_FINISH]]';
	public SMSINTypeElements getSMSINTypeAccess() {
		return pSMSINType;
	}
	
	public ParserRule getSMSINTypeRule() {
		return getSMSINTypeAccess().getRule();
	}
	
	//SMSINTypeCommand:
	//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Command_START[[' (any+=any* ';')*
	//	']]AASEntriesLOG_Command_FINISH]]';
	public SMSINTypeCommandElements getSMSINTypeCommandAccess() {
		return pSMSINTypeCommand;
	}
	
	public ParserRule getSMSINTypeCommandRule() {
		return getSMSINTypeCommandAccess().getRule();
	}
	
	//SMSINTypeNameplate:
	//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_Nameplate_START[[' (any+=any* ';')*
	//	']]AASEntriesLOG_Nameplate_FINISH]]';
	public SMSINTypeNameplateElements getSMSINTypeNameplateAccess() {
		return pSMSINTypeNameplate;
	}
	
	public ParserRule getSMSINTypeNameplateRule() {
		return getSMSINTypeNameplateAccess().getRule();
	}
	
	//SMSINTypeTechnicalData:
	//	'AAS' '::' 'SMS' name=STRING '[[AASEntriesLOG_TechnicalData_START[[' (any+=any* ';')*
	//	']]AASEntriesLOG_TechnicalData_FINISH]]';
	public SMSINTypeTechnicalDataElements getSMSINTypeTechnicalDataAccess() {
		return pSMSINTypeTechnicalData;
	}
	
	public ParserRule getSMSINTypeTechnicalDataRule() {
		return getSMSINTypeTechnicalDataAccess().getRule();
	}
	
	//any:
	//	name=(a1 | a2 | a3 | a4 | a5 | b1 | b2 | b3 | b4 | b5);
	public AnyElements getAnyAccess() {
		return pAny;
	}
	
	public ParserRule getAnyRule() {
		return getAnyAccess().getRule();
	}
	
	//a1:
	//	'†' name=STRING;
	public A1Elements getA1Access() {
		return pA1;
	}
	
	public ParserRule getA1Rule() {
		return getA1Access().getRule();
	}
	
	//a2:
	//	'º' name=STRING;
	public A2Elements getA2Access() {
		return pA2;
	}
	
	public ParserRule getA2Rule() {
		return getA2Access().getRule();
	}
	
	//a3:
	//	'¤' name=STRING;
	public A3Elements getA3Access() {
		return pA3;
	}
	
	public ParserRule getA3Rule() {
		return getA3Access().getRule();
	}
	
	//a4:
	//	'§' name=STRING;
	public A4Elements getA4Access() {
		return pA4;
	}
	
	public ParserRule getA4Rule() {
		return getA4Access().getRule();
	}
	
	//a5:
	//	'Ͱ' name=STRING;
	public A5Elements getA5Access() {
		return pA5;
	}
	
	public ParserRule getA5Rule() {
		return getA5Access().getRule();
	}
	
	//b1:
	//	'|!|' name=STRING;
	public B1Elements getB1Access() {
		return pB1;
	}
	
	public ParserRule getB1Rule() {
		return getB1Access().getRule();
	}
	
	//b2:
	//	'|.|' name=STRING;
	public B2Elements getB2Access() {
		return pB2;
	}
	
	public ParserRule getB2Rule() {
		return getB2Access().getRule();
	}
	
	//b3:
	//	'|*|' name=STRING;
	public B3Elements getB3Access() {
		return pB3;
	}
	
	public ParserRule getB3Rule() {
		return getB3Access().getRule();
	}
	
	//b4:
	//	'|_|' name=STRING;
	public B4Elements getB4Access() {
		return pB4;
	}
	
	public ParserRule getB4Rule() {
		return getB4Access().getRule();
	}
	
	//b5:
	//	'|+ENTRY|' name=STRING;
	public B5Elements getB5Access() {
		return pB5;
	}
	
	public ParserRule getB5Rule() {
		return getB5Access().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
