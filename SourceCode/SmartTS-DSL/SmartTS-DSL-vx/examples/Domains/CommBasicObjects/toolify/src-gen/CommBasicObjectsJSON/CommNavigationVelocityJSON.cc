//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommNavigationVelocityJSON.hh"


namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::CommNavigationVelocity& obj, nlohmann::json& j)
{
	// vX: Double
	j["vX"] = obj.vX;
	// vY: Double
	j["vY"] = obj.vY;
	// omega: Double
	j["omega"] = obj.omega;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::CommNavigationVelocity& obj)
{
	// vX: Double
	if(j.contains("vX") && j["vX"].is_number_float()) {
		obj.vX = j["vX"].get<double>();
	}
	// vY: Double
	if(j.contains("vY") && j["vY"].is_number_float()) {
		obj.vY = j["vY"].get<double>();
	}
	// omega: Double
	if(j.contains("omega") && j["omega"].is_number_float()) {
		obj.omega = j["omega"].get<double>();
	}
}

} // end namespace CommBasicObjectsIDL
