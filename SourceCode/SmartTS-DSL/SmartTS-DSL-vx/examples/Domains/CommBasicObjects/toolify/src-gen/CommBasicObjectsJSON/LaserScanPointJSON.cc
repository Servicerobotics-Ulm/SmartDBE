//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "LaserScanPointJSON.hh"


namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::LaserScanPoint& obj, nlohmann::json& j)
{
	// index: UInt16
	j["index"] = obj.index;
	// distance: UInt16
	j["distance"] = obj.distance;
	// intensity: UInt8
	j["intensity"] = obj.intensity;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::LaserScanPoint& obj)
{
	// index: UInt16
	if(j.contains("index") && j["index"].is_number_unsigned()) {
		obj.index = j["index"].get<unsigned short>();
	}
	// distance: UInt16
	if(j.contains("distance") && j["distance"].is_number_unsigned()) {
		obj.distance = j["distance"].get<unsigned short>();
	}
	// intensity: UInt8
	if(j.contains("intensity") && j["intensity"].is_number_unsigned()) {
		obj.intensity = j["intensity"].get<unsigned char>();
	}
}

} // end namespace CommBasicObjectsIDL
