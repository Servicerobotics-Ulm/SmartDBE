//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommJoystickJSON.hh"


namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::CommJoystick& obj, nlohmann::json& j)
{
	// xpos: Int16
	j["xpos"] = obj.xpos;
	// ypos: Int16
	j["ypos"] = obj.ypos;
	// x2pos: Int16
	j["x2pos"] = obj.x2pos;
	// y2pos: Int16
	j["y2pos"] = obj.y2pos;
	// buttons: UInt16
	j["buttons"] = obj.buttons;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::CommJoystick& obj)
{
	// xpos: Int16
	if(j.contains("xpos") && j["xpos"].is_number_integer()) {
		obj.xpos = j["xpos"].get<short>();
	}
	// ypos: Int16
	if(j.contains("ypos") && j["ypos"].is_number_integer()) {
		obj.ypos = j["ypos"].get<short>();
	}
	// x2pos: Int16
	if(j.contains("x2pos") && j["x2pos"].is_number_integer()) {
		obj.x2pos = j["x2pos"].get<short>();
	}
	// y2pos: Int16
	if(j.contains("y2pos") && j["y2pos"].is_number_integer()) {
		obj.y2pos = j["y2pos"].get<short>();
	}
	// buttons: UInt16
	if(j.contains("buttons") && j["buttons"].is_number_unsigned()) {
		obj.buttons = j["buttons"].get<unsigned short>();
	}
}

} // end namespace CommBasicObjectsIDL
