//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommMobileLaserScanJSON.hh"

#include "CommBasicObjectsJSON/CommBaseStateJSON.hh"
#include "CommBasicObjectsJSON/LaserScan6DPoseJSON.hh"
#include "CommBasicObjectsJSON/CommPose3dJSON.hh"

namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::CommMobileLaserScan& obj, nlohmann::json& j)
{
	// base_state: CommBaseState
	to_json(obj.base_state, j["base_state"]);
	// laser_scan_pose: LaserScan6DPose
	to_json(obj.laser_scan_pose, j["laser_scan_pose"]);
	// laser_world_pose: CommPose3d
	to_json(obj.laser_world_pose, j["laser_world_pose"]);
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::CommMobileLaserScan& obj)
{
	// base_state: CommBaseState
	if(j.contains("base_state") && j["base_state"].is_object()) {
		//from_json(j["base_state"], obj.base_state);
		obj.base_state = j["base_state"].get<CommBasicObjectsIDL::CommBaseState>();
	}
	// laser_scan_pose: LaserScan6DPose
	if(j.contains("laser_scan_pose") && j["laser_scan_pose"].is_object()) {
		//from_json(j["laser_scan_pose"], obj.laser_scan_pose);
		obj.laser_scan_pose = j["laser_scan_pose"].get<CommBasicObjectsIDL::LaserScan6DPose>();
	}
	// laser_world_pose: CommPose3d
	if(j.contains("laser_world_pose") && j["laser_world_pose"].is_object()) {
		//from_json(j["laser_world_pose"], obj.laser_world_pose);
		obj.laser_world_pose = j["laser_world_pose"].get<CommBasicObjectsIDL::CommPose3d>();
	}
}

} // end namespace CommBasicObjectsIDL
