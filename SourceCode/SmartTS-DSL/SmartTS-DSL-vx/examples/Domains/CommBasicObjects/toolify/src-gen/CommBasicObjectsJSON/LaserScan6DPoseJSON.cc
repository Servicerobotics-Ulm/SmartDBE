//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "LaserScan6DPoseJSON.hh"

#include "CommBasicObjectsJSON/CommLaserScanJSON.hh"
#include "CommBasicObjectsJSON/CommPose3dJSON.hh"

namespace CommBasicObjectsIDL {

void to_json(const CommBasicObjectsIDL::LaserScan6DPose& obj, nlohmann::json& j)
{
	// laser_scan: CommLaserScan
	to_json(obj.laser_scan, j["laser_scan"]);
	// sensor_pose: CommPose3d
	to_json(obj.sensor_pose, j["sensor_pose"]);
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommBasicObjectsIDL::LaserScan6DPose& obj)
{
	// laser_scan: CommLaserScan
	if(j.contains("laser_scan") && j["laser_scan"].is_object()) {
		//from_json(j["laser_scan"], obj.laser_scan);
		obj.laser_scan = j["laser_scan"].get<CommBasicObjectsIDL::CommLaserScan>();
	}
	// sensor_pose: CommPose3d
	if(j.contains("sensor_pose") && j["sensor_pose"].is_object()) {
		//from_json(j["sensor_pose"], obj.sensor_pose);
		obj.sensor_pose = j["sensor_pose"].get<CommBasicObjectsIDL::CommPose3d>();
	}
}

} // end namespace CommBasicObjectsIDL
