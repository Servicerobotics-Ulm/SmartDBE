//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommBasicObjects/CommPose3dWithCovarianceACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommPose3dACE.hh"

// serialization operator for element CommPose3dWithCovariance
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommBasicObjectsIDL::CommPose3dWithCovariance &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element pose
	good_bit = good_bit && cdr << data.pose;
	// serialize list-element covMatrix
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.covMatrix.size());
	good_bit = good_bit && cdr.write_double_array(data.covMatrix.data(), data.covMatrix.size());
	
	return good_bit;
}

// de-serialization operator for element CommPose3dWithCovariance
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommBasicObjectsIDL::CommPose3dWithCovariance &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element pose
	good_bit = good_bit && cdr >> data.pose;
	// deserialize list-type element covMatrix
	ACE_CDR::ULong data_covMatrixNbr;
	good_bit = good_bit && cdr >> data_covMatrixNbr;
	data.covMatrix.resize(data_covMatrixNbr);
	good_bit = good_bit && cdr.read_double_array(data.covMatrix.data(), data_covMatrixNbr);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommPose3dWithCovariance
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommBasicObjects::CommPose3dWithCovariance &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommPose3dWithCovariance
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommBasicObjects::CommPose3dWithCovariance &obj)
{
	return cdr >> obj.set();
}
