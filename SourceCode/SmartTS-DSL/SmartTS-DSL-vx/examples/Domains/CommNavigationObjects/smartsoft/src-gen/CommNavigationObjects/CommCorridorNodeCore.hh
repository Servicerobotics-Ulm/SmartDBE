//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMNAVIGATIONOBJECTS_COMMCORRIDORNODE_CORE_H_
#define COMMNAVIGATIONOBJECTS_COMMCORRIDORNODE_CORE_H_

#include "CommNavigationObjects/CommCorridorNodeData.hh"
#include "CommNavigationObjects/enumNODE_STATUS.hh"
#include "CommNavigationObjects/enumNODE_TYPE.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommNavigationObjects {
	
class CommCorridorNodeCore {
protected:
	// data structure
	CommNavigationObjectsIDL::CommCorridorNode idl_CommCorridorNode;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommNavigationObjectsIDL::CommCorridorNode DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CommCorridorNodeCore();
	CommCorridorNodeCore(const DATATYPE &data);
	// default destructor
	virtual ~CommCorridorNodeCore();
	
	const DATATYPE& get() const { return idl_CommCorridorNode; }
	operator const DATATYPE&() const { return idl_CommCorridorNode; }
	DATATYPE& set() { return idl_CommCorridorNode; }

	static inline std::string identifier(void) { return "CommNavigationObjects::CommCorridorNode"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Id
	inline unsigned int getId() const { return idl_CommCorridorNode.id; }
	inline CommCorridorNodeCore& setId(const unsigned int &id) { idl_CommCorridorNode.id = id; return *this; }
	
	// getter and setter for element X
	inline double getX() const { return idl_CommCorridorNode.x; }
	inline CommCorridorNodeCore& setX(const double &x) { idl_CommCorridorNode.x = x; return *this; }
	
	// getter and setter for element Y
	inline double getY() const { return idl_CommCorridorNode.y; }
	inline CommCorridorNodeCore& setY(const double &y) { idl_CommCorridorNode.y = y; return *this; }
	
	// getter and setter for element Pose
	inline unsigned int getPose() const { return idl_CommCorridorNode.pose; }
	inline CommCorridorNodeCore& setPose(const unsigned int &pose) { idl_CommCorridorNode.pose = pose; return *this; }
	
	// getter and setter for element Path
	inline unsigned int getPath() const { return idl_CommCorridorNode.path; }
	inline CommCorridorNodeCore& setPath(const unsigned int &path) { idl_CommCorridorNode.path = path; return *this; }
	
	// getter and setter for element Width
	inline double getWidth() const { return idl_CommCorridorNode.width; }
	inline CommCorridorNodeCore& setWidth(const double &width) { idl_CommCorridorNode.width = width; return *this; }
	
	// getter and setter for element Type
	inline CommNavigationObjects::NODE_TYPE getType() const { return CommNavigationObjects::NODE_TYPE(idl_CommCorridorNode.type); }
	inline CommCorridorNodeCore& setType(const CommNavigationObjects::NODE_TYPE &type) { idl_CommCorridorNode.type = type; return *this; }
	
	// getter and setter for element Sts
	inline CommNavigationObjects::NODE_STATUS getSts() const { return CommNavigationObjects::NODE_STATUS(idl_CommCorridorNode.sts); }
	inline CommCorridorNodeCore& setSts(const CommNavigationObjects::NODE_STATUS &sts) { idl_CommCorridorNode.sts = sts; return *this; }
	
	// getter and setter for element RobotID
	inline std::string getRobotID() const { return idl_CommCorridorNode.robotID; }
	inline CommCorridorNodeCore& setRobotID(const std::string &robotID) { idl_CommCorridorNode.robotID = robotID; return *this; }
};

} /* namespace CommNavigationObjects */
#endif /* COMMNAVIGATIONOBJECTS_COMMCORRIDORNODE_CORE_H_ */
