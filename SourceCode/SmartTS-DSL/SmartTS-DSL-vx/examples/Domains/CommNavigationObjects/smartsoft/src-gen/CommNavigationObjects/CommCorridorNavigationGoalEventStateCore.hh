//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMNAVIGATIONOBJECTS_COMMCORRIDORNAVIGATIONGOALEVENTSTATE_CORE_H_
#define COMMNAVIGATIONOBJECTS_COMMCORRIDORNAVIGATIONGOALEVENTSTATE_CORE_H_

#include "CommNavigationObjects/CommCorridorNavigationGoalEventStateData.hh"
#include "CommNavigationObjects/enumPathNavigationEventType.hh"
#include "CommBasicObjects/CommPosition3d.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommNavigationObjects {
	
class CommCorridorNavigationGoalEventStateCore {
protected:
	// data structure
	CommNavigationObjectsIDL::CommCorridorNavigationGoalEventState idl_CommCorridorNavigationGoalEventState;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommNavigationObjectsIDL::CommCorridorNavigationGoalEventState DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CommCorridorNavigationGoalEventStateCore();
	CommCorridorNavigationGoalEventStateCore(const DATATYPE &data);
	// default destructor
	virtual ~CommCorridorNavigationGoalEventStateCore();
	
	const DATATYPE& get() const { return idl_CommCorridorNavigationGoalEventState; }
	operator const DATATYPE&() const { return idl_CommCorridorNavigationGoalEventState; }
	DATATYPE& set() { return idl_CommCorridorNavigationGoalEventState; }

	static inline std::string identifier(void) { return "CommNavigationObjects::CommCorridorNavigationGoalEventState"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element NewState
	inline CommNavigationObjects::PathNavigationEventType getNewState() const { return CommNavigationObjects::PathNavigationEventType(idl_CommCorridorNavigationGoalEventState.newState); }
	inline CommCorridorNavigationGoalEventStateCore& setNewState(const CommNavigationObjects::PathNavigationEventType &newState) { idl_CommCorridorNavigationGoalEventState.newState = newState; return *this; }
	
	// getter and setter for element NextGoal
	inline CommBasicObjects::CommPosition3d getNextGoal() const { return CommBasicObjects::CommPosition3d(idl_CommCorridorNavigationGoalEventState.nextGoal); }
	inline CommCorridorNavigationGoalEventStateCore& setNextGoal(const CommBasicObjects::CommPosition3d &nextGoal) { idl_CommCorridorNavigationGoalEventState.nextGoal = nextGoal; return *this; }
};

} /* namespace CommNavigationObjects */
#endif /* COMMNAVIGATIONOBJECTS_COMMCORRIDORNAVIGATIONGOALEVENTSTATE_CORE_H_ */
