//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommNavigationObjects/CommGridMapACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommTimeStampACE.hh"

// serialization operator for element CommGridMap
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjectsIDL::CommGridMap &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element id
	good_bit = good_bit && cdr.write_ulong(data.id);
	// serialize list-element is_valid
	good_bit = good_bit && cdr.write_boolean(data.is_valid);
	// serialize list-element time
	good_bit = good_bit && cdr << data.time;
	// serialize list-element xOffsetMM
	good_bit = good_bit && cdr.write_long(data.xOffsetMM);
	// serialize list-element yOffsetMM
	good_bit = good_bit && cdr.write_long(data.yOffsetMM);
	// serialize list-element xOffsetCells
	good_bit = good_bit && cdr.write_long(data.xOffsetCells);
	// serialize list-element yOffsetCells
	good_bit = good_bit && cdr.write_long(data.yOffsetCells);
	// serialize list-element cellSizeMM
	good_bit = good_bit && cdr.write_long(data.cellSizeMM);
	// serialize list-element xSizeMM
	good_bit = good_bit && cdr.write_ulong(data.xSizeMM);
	// serialize list-element ySizeMM
	good_bit = good_bit && cdr.write_ulong(data.ySizeMM);
	// serialize list-element xSizeCells
	good_bit = good_bit && cdr.write_ulong(data.xSizeCells);
	// serialize list-element ySizeCells
	good_bit = good_bit && cdr.write_ulong(data.ySizeCells);
	// serialize list-element size
	good_bit = good_bit && cdr.write_ulong(data.size);
	// serialize list-element cell
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.cell.size());
	good_bit = good_bit && cdr.write_octet_array(data.cell.data(), data.cell.size());
	
	return good_bit;
}

// de-serialization operator for element CommGridMap
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjectsIDL::CommGridMap &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element id
	good_bit = good_bit && cdr.read_ulong(data.id);
	// deserialize type element is_valid
	good_bit = good_bit && cdr.read_boolean(data.is_valid);
	// deserialize type element time
	good_bit = good_bit && cdr >> data.time;
	// deserialize type element xOffsetMM
	good_bit = good_bit && cdr.read_long(data.xOffsetMM);
	// deserialize type element yOffsetMM
	good_bit = good_bit && cdr.read_long(data.yOffsetMM);
	// deserialize type element xOffsetCells
	good_bit = good_bit && cdr.read_long(data.xOffsetCells);
	// deserialize type element yOffsetCells
	good_bit = good_bit && cdr.read_long(data.yOffsetCells);
	// deserialize type element cellSizeMM
	good_bit = good_bit && cdr.read_long(data.cellSizeMM);
	// deserialize type element xSizeMM
	good_bit = good_bit && cdr.read_ulong(data.xSizeMM);
	// deserialize type element ySizeMM
	good_bit = good_bit && cdr.read_ulong(data.ySizeMM);
	// deserialize type element xSizeCells
	good_bit = good_bit && cdr.read_ulong(data.xSizeCells);
	// deserialize type element ySizeCells
	good_bit = good_bit && cdr.read_ulong(data.ySizeCells);
	// deserialize type element size
	good_bit = good_bit && cdr.read_ulong(data.size);
	// deserialize list-type element cell
	ACE_CDR::ULong data_cellNbr;
	good_bit = good_bit && cdr >> data_cellNbr;
	data.cell.resize(data_cellNbr);
	good_bit = good_bit && cdr.read_octet_array(data.cell.data(), data_cellNbr);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommGridMap
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjects::CommGridMap &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommGridMap
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjects::CommGridMap &obj)
{
	return cdr >> obj.set();
}
