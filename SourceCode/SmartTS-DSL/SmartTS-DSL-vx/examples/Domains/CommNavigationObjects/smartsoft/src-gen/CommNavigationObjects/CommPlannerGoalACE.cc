//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommNavigationObjects/CommPlannerGoalACE.hh"
#include <ace/SString.h>

// serialization operator for element CommPlannerGoal
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjectsIDL::CommPlannerGoal &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element id
	good_bit = good_bit && cdr.write_long(data.id);
	// serialize list-element flag
	good_bit = good_bit && cdr.write_long(data.flag);
	// serialize list-element xWayPoint
	good_bit = good_bit && cdr.write_double(data.xWayPoint);
	// serialize list-element yWayPoint
	good_bit = good_bit && cdr.write_double(data.yWayPoint);
	// serialize list-element hWayPoint
	good_bit = good_bit && cdr.write_double(data.hWayPoint);
	// serialize list-element xGoalPoint
	good_bit = good_bit && cdr.write_double(data.xGoalPoint);
	// serialize list-element yGoalPoint
	good_bit = good_bit && cdr.write_double(data.yGoalPoint);
	// serialize list-element hGoalPoint
	good_bit = good_bit && cdr.write_double(data.hGoalPoint);
	
	return good_bit;
}

// de-serialization operator for element CommPlannerGoal
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjectsIDL::CommPlannerGoal &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element id
	good_bit = good_bit && cdr.read_long(data.id);
	// deserialize type element flag
	good_bit = good_bit && cdr.read_long(data.flag);
	// deserialize type element xWayPoint
	good_bit = good_bit && cdr.read_double(data.xWayPoint);
	// deserialize type element yWayPoint
	good_bit = good_bit && cdr.read_double(data.yWayPoint);
	// deserialize type element hWayPoint
	good_bit = good_bit && cdr.read_double(data.hWayPoint);
	// deserialize type element xGoalPoint
	good_bit = good_bit && cdr.read_double(data.xGoalPoint);
	// deserialize type element yGoalPoint
	good_bit = good_bit && cdr.read_double(data.yGoalPoint);
	// deserialize type element hGoalPoint
	good_bit = good_bit && cdr.read_double(data.hGoalPoint);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommPlannerGoal
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommNavigationObjects::CommPlannerGoal &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommPlannerGoal
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommNavigationObjects::CommPlannerGoal &obj)
{
	return cdr >> obj.set();
}
