//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommNavigationObjects/CommCorridorNavigationNodeAnswer.hh"


using namespace CommNavigationObjects;

CommCorridorNavigationNodeAnswer::CommCorridorNavigationNodeAnswer()
:	CommCorridorNavigationNodeAnswerCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommCorridorNavigationNodeAnswer::CommCorridorNavigationNodeAnswer(const std::vector<CommNavigationObjects::CommCorridorNode> &nodesList, const bool &success)
:	CommCorridorNavigationNodeAnswerCore() // base constructor sets default values as defined in the model
{
	setNodesList(nodesList);
	setSuccess(success);
}
 */

CommCorridorNavigationNodeAnswer::CommCorridorNavigationNodeAnswer(const CommCorridorNavigationNodeAnswerCore &commCorridorNavigationNodeAnswer)
:	CommCorridorNavigationNodeAnswerCore(commCorridorNavigationNodeAnswer)
{  }

CommCorridorNavigationNodeAnswer::CommCorridorNavigationNodeAnswer(const DATATYPE &commCorridorNavigationNodeAnswer)
:	CommCorridorNavigationNodeAnswerCore(commCorridorNavigationNodeAnswer)
{  }

CommCorridorNavigationNodeAnswer::~CommCorridorNavigationNodeAnswer()
{  }

void CommCorridorNavigationNodeAnswer::setNodes(std::deque<graphNode> &p){

	this->resizeNodesList(p.size());
	unsigned int i =0;
	for(std::deque<graphNode>::iterator it=p.begin();it!=p.end();it++,i++){
		CommNavigationObjects::CommCorridorNode node(*it);
		this->setNodesListElemAtPos(i,node);
	}
}


void CommCorridorNavigationNodeAnswer::setStsNodesListElemAtPos(const size_t pos, node_status sts){
	CommNavigationObjects::CommCorridorNode node = this->getNodesListElemAtPos(pos);
	node.setStsTGraphNode(sts);
	this->setNodesListElemAtPos(pos,node);
}
