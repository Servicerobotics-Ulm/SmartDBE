//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommPlannerGoalJSON.hh"


namespace CommNavigationObjectsIDL {

void to_json(const CommNavigationObjectsIDL::CommPlannerGoal& obj, nlohmann::json& j)
{
	// id: Int32
	j["id"] = obj.id;
	// flag: Int32
	j["flag"] = obj.flag;
	// xWayPoint: Double
	j["xWayPoint"] = obj.xWayPoint;
	// yWayPoint: Double
	j["yWayPoint"] = obj.yWayPoint;
	// hWayPoint: Double
	j["hWayPoint"] = obj.hWayPoint;
	// xGoalPoint: Double
	j["xGoalPoint"] = obj.xGoalPoint;
	// yGoalPoint: Double
	j["yGoalPoint"] = obj.yGoalPoint;
	// hGoalPoint: Double
	j["hGoalPoint"] = obj.hGoalPoint;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommNavigationObjectsIDL::CommPlannerGoal& obj)
{
	// id: Int32
	if(j.contains("id") && j["id"].is_number_integer()) {
		obj.id = j["id"].get<int>();
	}
	// flag: Int32
	if(j.contains("flag") && j["flag"].is_number_integer()) {
		obj.flag = j["flag"].get<int>();
	}
	// xWayPoint: Double
	if(j.contains("xWayPoint") && j["xWayPoint"].is_number_float()) {
		obj.xWayPoint = j["xWayPoint"].get<double>();
	}
	// yWayPoint: Double
	if(j.contains("yWayPoint") && j["yWayPoint"].is_number_float()) {
		obj.yWayPoint = j["yWayPoint"].get<double>();
	}
	// hWayPoint: Double
	if(j.contains("hWayPoint") && j["hWayPoint"].is_number_float()) {
		obj.hWayPoint = j["hWayPoint"].get<double>();
	}
	// xGoalPoint: Double
	if(j.contains("xGoalPoint") && j["xGoalPoint"].is_number_float()) {
		obj.xGoalPoint = j["xGoalPoint"].get<double>();
	}
	// yGoalPoint: Double
	if(j.contains("yGoalPoint") && j["yGoalPoint"].is_number_float()) {
		obj.yGoalPoint = j["yGoalPoint"].get<double>();
	}
	// hGoalPoint: Double
	if(j.contains("hGoalPoint") && j["hGoalPoint"].is_number_float()) {
		obj.hGoalPoint = j["hGoalPoint"].get<double>();
	}
}

} // end namespace CommNavigationObjectsIDL
